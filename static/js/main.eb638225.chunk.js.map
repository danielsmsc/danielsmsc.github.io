{"version":3,"sources":["colors.js","core/Home/Home.js","core/Page/Page.js","shared/Button/Button.js","shared/ThemedField/ThemedField.js","server-config.js","core/Register/RegisterForm.js","core/Register/Register.js","core/Header/ThemeSwitcherButton.js","actions/user.js","actions/auth.js","core/Header/Header.js","core/EmailSendedAlert.js","core/Login/LoginForm.js","core/Login/Login.js","shared/Emoji.js","core/Profile/ProfileView.js","core/Profile/Profile.js","shared/FileInput/FileInput.js","core/Settings/Settings.js","shared/TopicsInputField/TopicsInputField.js","core/Teams/CreateTeamForm.js","core/Teams/CreateTeam.js","core/Teams/Team/TeamThread/TeamThread.js","actions/p2p.js","core/Teams/Team/TeamContainer.js","actions/socket.js","core/Teams/TeamSettings/TeamSettings.js","core/Teams/TeamSettings/TeamSettingsContainer.js","core/Teams/TeamPublicView/TeamPublicView.js","core/GlobalSearch/GlobalSearch.js","core/Call/Call.js","core/ReconfirmEmail.js","App.js","reducers/auth.js","reducers/user.js","reducers/p2p.js","reducers/socket.js","reducers/index.js","index.js"],"names":["dark","body","foreground","light","common","primary","Home","className","src","style","backgroundColor","colors","ThemeContext","createContext","Page","children","useState","theme","setTheme","useEffect","savedTheme","localStorage","getItem","setItem","Provider","value","toggleTheme","Button","props","useContext","background","boxShadow","type","defaultProps","ThemedField","config","baseUrl","FormTitle","styled","h2","spinning","keyframes","FieldSpinner","div","RegisterForm","emailRegex","passwordRegex","emailError","setEmailError","emailChecking","setEmailChecking","emailDirty","setEmailDirty","myHandleBlur","e","handleBlur","a","email","target","test","fetch","serverConfig","res","text","error","status","initialValues","fullname","password","repeat_password","validate","values","errors","onSubmit","setSubmitting","isSubmitting","aria-label","role","autoFocus","placeholder","name","component","onBlur","emailCheckEr","emailValidationEr","getEmailErrors","Register","history","handleSubmit","method","headers","JSON","stringify","redirectUrl","window","location","origin","ok","push","pathname","ThemeSwitcherButton","border","outline","color","cursor","fontSize","recieveUserData","data","payload","fetchUserData","userId","dispatch","Accept","response","json","recieveTokens","token","requestLogin","credentials","href","errorText","connect","state","user","userData","id","_id","menuState","setMenuState","redirect","setRedirect","setSignedUserData","to","onClick","icon","faSearch","margin","faMoon","faSun","faUser","faCog","faSignOutAlt","EmailSendedAlert","textDecoration","path","Login","FormError","auth","loginError","Emoji","label","ProfileView","handleInvitationAction","action","teamId","Authorization","reload","backgroundImage","imageSrc","substr","owner","display","flexDirection","alignItems","invitations","length","map","inv","key","emailConfirmed","marginTop","marginLeft","uuid","bio","marginRight","faEnvelope","github","linkedin","facebook","teams","team","borderColor","confirmed","isConfirmed","match","setUserData","isOwner","setIsOwner","fetchUser","params","FileInput","imageToUpload","setImageToUpload","save","setShowSave","discard","setShowDiscard","setImageSrc","imageTouched","setImagedTouched","fileInputRef","useRef","defaultSrc","options","indexOf","handleImageSave","formData","FormData","append","onFileSave","current","click","faCamera","onChange","file","files","blob","Blob","url","URL","createObjectURL","onFileAttached","ref","jwt","userImageSrc","setUserImageSrc","handleFileSave","TopicsInputField","topics","_setTopics","setTopics","tpc","max","onTopicsChange","topic","Math","random","filter","t","handleTopicDelete","faTimes","trim","onKeyDown","keyCode","splice","FieldsContainer","CreateTeamForm","technologies","setTechnologies","imageFormData","handleFileAttached","handleTechnologiesChange","techs","description","marginBottom","form","creationResponse","InfoMessage","YourMessage","AnothersMessage","Teammate","TeamPage","teamInfo","msgInputValue","setMsgInputValue","socket","messagesList","conversation","messages","setMessages","scrollTop","scrollHeight","on","msg","console","log","newMessages","getMsgType","alignSelf","message","userInfo","teammates","find","preventDefault","emit","transform","faPaperPlane","ownerId","teammate","whom","tryCall","faPhoneAlt","callRecieved","from","p2p","setUserIsTeammate","setTeamInfo","setSocket","connected","setConnected","fetchTeamData","ids","result","some","sock","io","query","intializeSocket","handleCallTry","EditableTeammate","onReject","roles","toLowerCase","TeamSettings","searchedUsers","setSearchedUsers","userSearchInput","handleUserSearch","val","split","join","filtered","includes","users","u","invited","handleUserInvitation","onTeamChanged","handleUserInviteClick","handleInvitationWithdrawClick","handleParticipantReject","confirm","subscription","fromEvent","pipe","debounceTime","distinctUntilChanged","subscribe","unsubscribe","disabled","fetchTeamInfo","teamJson","TeamPubclicView","tech","index","mapTechnologies","faUsers","UserPreview","formatBio","GlobalSearch","searchFieldRef","setUsers","handleSearchChange","iceConfig","iceServers","urls","username","credential","localStream","ringtoneAudio","localVideo","partnerVideo","yourPeer","anotherPeer","setSubscriber","calling","setCalling","incomingCall","setIncomingCall","localAudioEnabled","setLocalAudioEnabled","localVideoEnabled","setLocalVideoEnabled","setTeamId","callerData","callEstablished","fetchStreamFromMediaDevices","video","navigator","mediaDevices","getUserMedia","audio","stream","getVideoTracks","enabled","srcObject","acceptCall","muted","Peer","initiator","trickle","answer","signalFromPartner","signal","signalFromCaller","peer","subscriber","handleCallDown","callFrom","play","backgroundUrl","faMicrophone","faVideo","faPhone","autoPlay","getAudioTracks","faMicrophoneSlash","faVideoSlash","sendConfirmationEmail","height","textAlign","justifyContent","GuardedRoute","signedIn","rest","Profile","Settings","CreateTeam","exact","TeamContainer","TeamSettingsContainer","ReconfirmEmail","TeamPublicView","authReducer","handleActions","userReducer","p2preducer","socketReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb638225.chunk.js","sourcesContent":["export default {\r\n  dark: {\r\n    body: '#0a0d14',\r\n    foreground: '#eee',\r\n  },\r\n\r\n  light: {\r\n    body: '#f5f5f5',\r\n    foreground: '#131313',\r\n  },\r\n\r\n  common: {\r\n    primary: '#673AB7',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport colors from '../../colors';\r\n\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"app-home\">\r\n      <img className=\"main-img\" src=\"./images/team.svg\" />\r\n      <h1 className=\"home-h1\">Welcome to our DevParties service!</h1>\r\n      <h2 className=\"home-h2\">Start collaboration with your team!</h2>\r\n\r\n      <div className=\"steps\">\r\n        <div className=\"step\">\r\n          <h2>1.</h2>\r\n          <img src=\"./images/login.svg\" />\r\n          <h2>Register your account</h2>\r\n        </div>\r\n\r\n        <div className=\"dots\">\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n        </div>\r\n\r\n        <div className=\"step\">\r\n          <h2>2.</h2>\r\n          <img src=\"./images/create-team.svg\" />\r\n          <h2>Create a team</h2>\r\n        </div>\r\n\r\n        <div className=\"dots\">\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n          <div style={{ backgroundColor: colors.common.primary }} className=\"dot\"></div>\r\n        </div>\r\n\r\n        <div className=\"step\">\r\n          <h2>3.</h2>\r\n          <img src=\"./images/collab.svg\" />\r\n          <h2>Start collaboration</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport './Page.css';\r\n\r\nexport const ThemeContext = createContext('dark');\r\n\r\nfunction Page({ children }) {\r\n  const [theme, setTheme] = useState('dark');\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('dev-parties-theme') || 'dark';\r\n    setTheme(savedTheme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('dev-parties-theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    const savedTheme = localStorage.getItem('dev-parties-theme');\r\n    setTheme(savedTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <div className={`app-page app-page-${theme}`}>{children}</div>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport colors from '../../colors';\r\n\r\nimport './Button.css';\r\n\r\nfunction Button(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = {\r\n    background: theme === 'dark' ? 'rgb(23 29 45)' : colors.common.primary,\r\n    boxShadow: `2px 2px 3px ${theme === 'dark' ? '#000' : '#888'}`,\r\n  };\r\n\r\n  return (\r\n    <button {...props} type={props.type} style={{ ...style, ...props.style }} className=\"app-button\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf(['button', 'submit']),\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport './ThemedField.css';\r\n\r\nfunction ThemedField(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div {...props} className={`form-field form-field-${theme}`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemedField;\r\n","const config = {\r\n  baseUrl: 'https://dev-parties.herokuapp.com',\r\n  // baseUrl: 'http://192.168.0.131:9000',\r\n};\r\n\r\nexport default config;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport colors from '../../colors';\r\nimport serverConfig from '../../server-config';\r\n\r\nimport './RegisterForm.css';\r\n\r\nexport const FormTitle = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst spinning = keyframes`\r\n  0% { transform: rotate(0deg) }\r\n  100% { transform: rotate(360deg) }\r\n`;\r\n\r\nconst FieldSpinner = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 43px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 3px solid ${colors.common.primary};\r\n  border-color: ${colors.common.primary} ${colors.common.primary} ${colors.common.primary} transparent;\r\n  border-radius: 50%;\r\n  animation: ${spinning} 1s infinite linear;\r\n`;\r\n\r\n// const FormImage = styled.div`\r\n//   position: absolute;\r\n//   width: 300px;\r\n//   heigth: 50px;\r\n//   top: -200px;\r\n// `;\r\n\r\nfunction RegisterForm(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,30}$/;\r\n  const [emailError, setEmailError] = useState('');\r\n  const [emailChecking, setEmailChecking] = useState(false);\r\n  const [emailDirty, setEmailDirty] = useState(false);\r\n\r\n  const myHandleBlur = async (e, handleBlur) => {\r\n    handleBlur(e);\r\n    setEmailDirty(true);\r\n    const email = e.target.value;\r\n\r\n    try {\r\n      if (email && emailRegex.test(email)) {\r\n        setEmailChecking(true);\r\n\r\n        const res = await fetch(`${serverConfig.baseUrl}/email-check/${email}`);\r\n        const error = await res.text();\r\n\r\n        if (res.status !== 200) {\r\n          setEmailError(error);\r\n        } else {\r\n          setEmailError('');\r\n        }\r\n\r\n        setEmailChecking(false);\r\n      }\r\n    } catch {}\r\n  };\r\n\r\n  const getEmailErrors = (emailCheckEr, emailValidationEr) => {\r\n    if (emailDirty) {\r\n      return emailCheckEr || emailValidationEr;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-register\" style={{}}>\r\n      <Formik\r\n        initialValues={{ email: '', fullname: '', password: '', repeat_password: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.email) {\r\n            errors.email = 'Email is required';\r\n            setEmailError('');\r\n          } else if (!emailRegex.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n            setEmailError('');\r\n          }\r\n\r\n          if (!values.fullname) {\r\n            errors.fullname = 'Fullname is required';\r\n          }\r\n\r\n          if (!values.password) {\r\n            errors.password = 'Password is required';\r\n          } else if (!passwordRegex.test(values.password)) {\r\n            errors.password =\r\n              'Password must contains from 8 to 30 characters and \\nmin 1 uppercase letter\\nmin 1 lowercase letter\\nmin 1 number\\n';\r\n          }\r\n\r\n          if (values.password !== values.repeat_password) {\r\n            errors.repeat_password = 'Passwords are not same';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          props.onSubmit(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting, handleBlur, errors }) => (\r\n          <Form className={`app-form app-form-${theme}`}>\r\n            <FormTitle>\r\n              <span aria-label=\"party-face-emoji\" role=\"img\">\r\n                🥳\r\n              </span>\r\n              Join us!\r\n              <span aria-label=\"party-face-emoji\" role=\"img\">\r\n                🥳\r\n              </span>\r\n            </FormTitle>\r\n\r\n            <ThemedField>\r\n              <label>Your fullname</label>\r\n              <Field autoFocus={true} placeholder=\"David Bowie\" type=\"text\" name=\"fullname\" />\r\n              <ErrorMessage name=\"fullname\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              {emailChecking && <FieldSpinner />}\r\n\r\n              <label>Email (we will send you a confrimation link)</label>\r\n              <Field onBlur={(e) => myHandleBlur(e, handleBlur)} placeholder=\"abc@gmail.com\" type=\"text\" name=\"email\" />\r\n              <span>{getEmailErrors(emailError, errors.email)}</span>\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" placeholder=\"Do not forget it :)\" />\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Repeat password</label>\r\n              <Field type=\"password\" name=\"repeat_password\" placeholder=\"\" />\r\n              <ErrorMessage name=\"repeat_password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <Button type=\"submit\">Sign up!</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport serverConfig from '../../server-config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Register({ history }) {\r\n  const handleSubmit = async (values) => {\r\n    const response = await fetch(serverConfig.baseUrl + '/signup', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        name: values.fullname,\r\n        password: values.password,\r\n        redirectUrl: `${window.location.origin}/#/login`,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      history.push({ pathname: '/confirm', email: values.email });\r\n    } else {\r\n      // history.push(); // TODO: redirect to registration error page\r\n    }\r\n  };\r\n\r\n  return <RegisterForm onSubmit={handleSubmit} />;\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport colors from '../../colors';\r\n\r\nfunction ThemeSwitcherButton(props) {\r\n  const style = {\r\n    background: colors.common.primary,\r\n    boxShadow: 'none',\r\n    border: 'none',\r\n    outline: 'none',\r\n    color: colors.dark.foreground,\r\n    cursor: 'pointer',\r\n    fontSize: '1.2rem',\r\n  };\r\n\r\n  return <button style={style} {...props}></button>;\r\n}\r\n\r\nexport default ThemeSwitcherButton;\r\n","import serverConfig from '../server-config';\r\n\r\nexport const RECIEVE_USER_DATA = 'users/RECIEVE_USER_DATA';\r\nexport const recieveUserData = (data) => {\r\n  return {\r\n    type: RECIEVE_USER_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const CLEAR_USER_DATA = 'users/CLEAR_USER_DATA';\r\nexport const clearUserData = () => {\r\n  return {\r\n    type: CLEAR_USER_DATA,\r\n  };\r\n};\r\n\r\nexport const fetchUserData = (userId) => async (dispatch) => {\r\n  const response = await fetch(`${serverConfig.baseUrl}/users/get/by/id/${userId}`, {\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n  });\r\n  const data = await response.json();\r\n\r\n  dispatch(recieveUserData(data));\r\n};\r\n\r\nexport const uploadPhoto = (userId, data, jwt) => async (dispatch) => {\r\n  await fetch(`${serverConfig.baseUrl}/users/update/image/${userId}`, {\r\n    method: 'put',\r\n    body: data,\r\n    headers: {\r\n      Authorization: `Bearer ${jwt}`,\r\n    },\r\n  });\r\n\r\n  dispatch(fetchUserData(userId));\r\n};\r\n","import serverConfig from '../server-config';\r\nimport { fetchUserData, clearUserData } from './user';\r\n\r\nexport const RECIEVE_TOKENS = 'auth/RECIEVE_TOKENS';\r\nexport const recieveTokens = ({ token, userId }) => {\r\n  localStorage.setItem('signedIn', 'true');\r\n\r\n  return {\r\n    type: RECIEVE_TOKENS,\r\n    payload: { token, userId },\r\n  };\r\n};\r\n\r\nexport const SET_ERROR_TEXT = 'auth/SET_ERROR_TEXT';\r\nexport const setErrorText = (err) => {\r\n  return {\r\n    type: SET_ERROR_TEXT,\r\n    payload: { errorText: err },\r\n  };\r\n};\r\n\r\nexport const CLEAR_AUTH_DATA = 'auth/CLEAR_AUTH_DATA';\r\nexport const clearAuthData = () => {\r\n  return {\r\n    type: CLEAR_AUTH_DATA,\r\n  };\r\n};\r\n\r\nexport const refreshAccessToken = () => async (dispatch) => {\r\n  const response = await fetch(`${serverConfig.baseUrl}/token/refresh`, {\r\n    method: 'get',\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (response.ok) {\r\n    const json = await response.json();\r\n\r\n    dispatch(recieveTokens(json));\r\n    dispatch(fetchUserData(json.userId));\r\n    localStorage.setItem('signedIn', 'true');\r\n  } else {\r\n    localStorage.setItem('signedIn', 'false');\r\n  }\r\n};\r\n\r\nexport const requestLogin = (email, password) => async (dispatch) => {\r\n  const response = await fetch(`${serverConfig.baseUrl}/auth/login`, {\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    credentials: 'include',\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    localStorage.setItem('signedIn', 'true');\r\n\r\n    const json = await response.json();\r\n    dispatch(recieveTokens(json));\r\n    dispatch(fetchUserData(json.userId));\r\n\r\n    window.location.href = '/#/';\r\n  } else {\r\n    localStorage.setItem('signedIn', 'false');\r\n    dispatch(setErrorText('Incorrect email or password'));\r\n  }\r\n};\r\n\r\nexport const signOut = () => async (dispatch) => {\r\n  await fetch(`${serverConfig.baseUrl}/auth/logout`, { credentials: 'include' });\r\n  localStorage.setItem('signedIn', 'false');\r\n\r\n  dispatch(clearAuthData());\r\n  dispatch(clearUserData());\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faUsers, faSun, faMoon, faCog, faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport ThemeSwitcherButton from './ThemeSwitcherButton';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/auth';\r\n\r\nimport colors from '../../colors';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [menuState, setMenuState] = useState('closed');\r\n  const [redirect, setRedirect] = useState('');\r\n  const [userData, setSignedUserData] = useState({ name: '', id: '' });\r\n\r\n  useEffect(() => {\r\n    setSignedUserData({ name: props.name, id: props.id });\r\n  }, [props]);\r\n\r\n  const toggleMenuState = () => {\r\n    menuState === 'open' ? setMenuState('closed') : setMenuState('open');\r\n  };\r\n\r\n  const themeIcon = () => {\r\n    return theme === 'light' ? <FontAwesomeIcon icon={faMoon} /> : <FontAwesomeIcon icon={faSun} />;\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    toggleMenuState();\r\n  };\r\n\r\n  const handleMenuItemClick = (url) => {\r\n    setRedirect(url);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    props.dispatch(signOut());\r\n  };\r\n\r\n  return (\r\n    <header style={{ backgroundColor: colors.common.primary }} className={`app-header app-header-${theme}`}>\r\n      {redirect && <Redirect to={redirect} />}\r\n\r\n      <div className=\"header-left-side\">\r\n        <h1 style={{ cursor: 'pointer' }} onClick={() => handleMenuItemClick('/')}>\r\n          DevParties\r\n        </h1>\r\n      </div>\r\n      <div className=\"header-right-side\">\r\n        <span>\r\n          <Link to=\"/search\">\r\n            <FontAwesomeIcon icon={faSearch} /> <span style={{ margin: '0 10px' }}>Global search</span>\r\n          </Link>\r\n        </span>\r\n        {!props.name && (\r\n          <div className=\"header-unauth-links\">\r\n            <span>\r\n              <Link to=\"/login\">Login</Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/register\">Sign Up</Link>\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <ThemeSwitcherButton onClick={toggleTheme}>{themeIcon()}</ThemeSwitcherButton>\r\n        {props.name && (\r\n          <div onClick={handleMenuClick} className=\"profile-header-settings\">\r\n            <a style={{ color: '#fff' }}>{userData.name}</a>\r\n            <ul\r\n              className={`profile-menu ${menuState}`}\r\n              style={{ boxShadow: `0 5px 10px ${theme === 'dark' ? '#000' : '#ccc'}` }}\r\n            >\r\n              <li className=\"profile-menu-item\">\r\n                <Link\r\n                  style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }}\r\n                  to={`/profile/${userData.id}`}\r\n                >\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li className=\"profile-menu-item\">\r\n                <Link style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }} to={`/settings`}>\r\n                  <FontAwesomeIcon icon={faCog} />\r\n                  Settings\r\n                </Link>\r\n              </li>\r\n              <li className=\"profile-menu-item\">\r\n                <Link\r\n                  to=\"/\"\r\n                  style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }}\r\n                  onClick={handleSignOut}\r\n                >\r\n                  <FontAwesomeIcon icon={faSignOutAlt} />\r\n                  Sign out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  name: state.user.userData.name,\r\n  id: state.user.userData._id,\r\n}))(Header);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction EmailSendedAlert({ location }) {\r\n  const { state } = location;\r\n\r\n  if (!location.email) {\r\n    return <Redirect path=\"home\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ fontSize: '7rem', margin: '40px' }}>\r\n        Thank you for registration!\r\n        <span aria-label=\"party-emoji\" role=\"img\">\r\n          🎉\r\n        </span>\r\n      </h1>\r\n      <h2 style={{ fontSize: '3rem', margin: '40px' }}>\r\n        Confirmation link has been sent to <span style={{ textDecoration: 'underline' }}>{location.email}</span>\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailSendedAlert;\r\n","import React, { useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport { FormTitle } from '../Register/RegisterForm';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './LoginForm.css';\r\n\r\nfunction Login(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\n  return (\r\n    <div className=\"app-login\">\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.email) {\r\n            errors.email = 'Email is required';\r\n          } else if (!emailRegex.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n          }\r\n\r\n          if (!values.password) {\r\n            errors.password = 'Password is required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => props.onSubmit(values)}\r\n      >\r\n        {() => (\r\n          <Form className={`app-form app-form-${theme}`}>\r\n            <FormTitle>\r\n              Login to your account!\r\n              <span aria-label=\"sipped-face-emoji\" role=\"img\">\r\n                🤐\r\n              </span>\r\n            </FormTitle>\r\n\r\n            <ThemedField>\r\n              <label>Your email</label>\r\n              <Field autoFocus={true} placeholder=\"abc@gmail.com\" type=\"text\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Your password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            {props.children}\r\n\r\n            <Button type=\"submit\">Login</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { requestLogin } from '../../actions/auth';\r\n\r\nconst FormError = styled.div`\r\n  color: rgb(204, 30, 30);\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nfunction Login(props) {\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [props])\r\n\r\n  const loginError = props.errorText;\r\n\r\n  const handleSubmit = async ({ email, password }) => {\r\n    props.dispatch(requestLogin(email, password));\r\n  };\r\n\r\n  // if (redirect) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  // when user authorized userId will not be empty\r\n  return (\r\n    <>\r\n      <LoginForm onSubmit={handleSubmit}>{loginError && <FormError>{loginError}</FormError>}</LoginForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  auth: state.auth,\r\n  errorText: state.auth.errorText,\r\n  userId: state.auth.userId,\r\n}))(Login);\r\n","import React from 'react';\r\n\r\nfunction Emoji({ children, label }) {\r\n  return (\r\n    <span aria-label={`${label}-emoji`} role=\"img\">\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Emoji;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './ProfileView.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport colors from '../../colors';\r\nimport Emoji from '../../shared/Emoji';\r\nimport serverConfig from '../../server-config';\r\n\r\nfunction ProfileView(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { user } = props;\r\n\r\n  const handleInviteClick = () => {};\r\n\r\n  const handleInvitationAction = async (action, teamId) => {\r\n    await fetch(`${serverConfig.baseUrl}/users/invitations/${action}/${teamId}`, {\r\n      headers: {\r\n        Authorization: `Bearer: ${props.token}`,\r\n      },\r\n    });\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleAcceptClick = (teamId) => {\r\n    handleInvitationAction('accept', teamId);\r\n  };\r\n\r\n  const handleDenyClick = (teamId) => {\r\n    handleInvitationAction('deny', teamId);\r\n  };\r\n\r\n  const mapTeams = () => {\r\n    return user.teams.map((team) => {\r\n      return (\r\n        <li style={{ borderColor: colors[theme].foreground }} key={team._id} className=\"team-mini\">\r\n          <div style={{ backgroundImage: `url(${serverConfig.baseUrl}/${team.imageSrc})` }} className=\"img-wrap\">\r\n            {team.name.substr(0, 2)}\r\n          </div>\r\n          <Link style={{ color: colors[theme].foreground }} to={`/teams/thread/${team._id}`}>\r\n            {team.name}\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTeams = () => {\r\n    if (user.teams && user.teams.length > 0) {\r\n      return (\r\n        <div>\r\n          <ul className=\"teams-list\">{mapTeams(user.teams)}</ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <h3 style={{ borderColor: colors.common.primary, marginLeft: '15px' }} className=\"h3-no-teams\">\r\n          <Emoji label=\"robot\">🤖</Emoji> You are not on any team yet\r\n        </h3>\r\n      );\r\n    }\r\n  };\r\n\r\n  const mapInvitations = () => {\r\n    return user.invitations.map((inv) => {\r\n      return (\r\n        <li key={inv.teamId}>\r\n          <Link to={`/team/${inv.teamId}`} style={{ color: colors[theme].foreground, textDecoration: 'underline' }}>\r\n            {inv.name}\r\n          </Link>\r\n          <button onClick={() => handleAcceptClick(inv.teamId)} className=\"accept-invitation-btn\">\r\n            Accept\r\n          </button>\r\n          <button onClick={() => handleDenyClick(inv.teamId)} className=\"deny-invitation-btn\">\r\n            Deny\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-profile-view\">\r\n      <div className=\"flex-row\">\r\n        <div className=\"left-section\">\r\n          <div\r\n            style={{ backgroundImage: `url(${serverConfig.baseUrl}/${user.imageSrc})` }}\r\n            className={`${!user.imageSrc && 'no-photo'} profile-img profile-img-${theme}`}\r\n          >\r\n            {!user.imageSrc && user.name.substr(0, 2)}\r\n          </div>\r\n\r\n          <div>\r\n            {props.owner ? (\r\n              <>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  {user.invitations.length > 0 && <h2 className=\"invitations-h2\">Your invitations:</h2>}\r\n                  <ul>{mapInvitations()}</ul>\r\n                  {user.emailConfirmed ? (\r\n                    <Button style={{ marginTop: '25px' }}>\r\n                      <Link to=\"/teams/create\">Create a team</Link>\r\n                    </Button>\r\n                  ) : (\r\n                    <Button style={{ marginTop: '25px' }}>\r\n                      <Link to=\"/re-confirm\">Confirm email</Link>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"guest-section\">\r\n                {user.emailConfirmed && (\r\n                  // <Button onClick={handleInviteClick} style={{ marginTop: '20px' }}>\r\n                  //   Invite to the team\r\n                  // </Button>\r\n                  <></>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n          <h1 className=\"profile-name\">\r\n            {user.name}\r\n            <span style={{ fontSize: '3rem', marginLeft: '10px', color: theme === 'dark' ? '#171d2d' : '#b2b2b2' }}>\r\n              #{user.uuid}\r\n            </span>\r\n          </h1>\r\n          {user.bio && <h2 className=\"profile-bio\">\"{user.bio}\"</h2>}\r\n          <h2 className=\"profile-email\">\r\n            <FontAwesomeIcon style={{ marginRight: '20px' }} icon={faEnvelope} />\r\n            {user.email}\r\n            {!user.emailConfirmed && <span style={{ color: 'red', margin: '0 10px' }}>(not confirmed)</span>}\r\n          </h2>\r\n\r\n          <div className=\"profile-links\">\r\n            <ul className=\"profile-links-list\">\r\n              {user.github && (\r\n                <li className=\"profile-link\">\r\n                  <a style={{ color: colors[theme].foreground }} target=\"_blank\" href={user.github}>\r\n                    <i className=\"fab fa-github\"></i> Github\r\n                  </a>\r\n                </li>\r\n              )}\r\n\r\n              {user.linkedin && (\r\n                <li className=\"profile-link\">\r\n                  <a style={{ color: colors[theme].foreground }} target=\"_blank\" href={user.linkedin}>\r\n                    <i className=\"fab fa-linkedin\"></i> Linkedin\r\n                  </a>\r\n                </li>\r\n              )}\r\n\r\n              {user.facebook && (\r\n                <li className=\"profile-link\">\r\n                  <a style={{ color: colors[theme].foreground }} target=\"_blank\" href={user.facebook}>\r\n                    <i className=\"fab fa-facebook\"></i> Facebook\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          {props.owner && <div className=\"teams-container\">{renderTeams()}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../../server-config';\r\nimport ProfileView from './ProfileView';\r\n\r\nfunction Profile({ match, userId, token }, props) {\r\n  const [user, setUserData] = useState();\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [match, userId]);\r\n\r\n  const fetchUser = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/get/by/id/${match.params.userId}`, {\r\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    });\r\n\r\n    const userData = await response.json();\r\n    setUserData(userData);\r\n    setIsOwner(userData._id === userId);\r\n  };\r\n\r\n  return user ? <ProfileView token={token} owner={isOwner} user={user} /> : <p>loading...</p>;\r\n}\r\n\r\nexport default connect((state) => ({\r\n  userId: state.auth.userId,\r\n  confirmed: state.user.userData.isConfirmed,\r\n  token: state.auth.token,\r\n}))(Profile);\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\n\r\nimport './FileInput.css';\r\n\r\nfunction FileInput(props) {\r\n  const [imageToUpload, setImageToUpload] = useState();\r\n  const [save, setShowSave] = useState();\r\n  const [discard, setShowDiscard] = useState();\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [imageTouched, setImagedTouched] = useState(false);\r\n  const fileInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setImageSrc(props.defaultSrc || '');\r\n  }, [props.defaultSrc]);\r\n\r\n  useEffect(() => {\r\n    setShowSave(props.options.indexOf('save') !== -1);\r\n    setShowDiscard(props.options.indexOf('discard') !== -1);\r\n  }, [props]);\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const blob = new Blob([file]);\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    setImageToUpload(file);\r\n    setImageSrc(url);\r\n    setImagedTouched(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    if (props.onFileAttached) props.onFileAttached(formData);\r\n  };\r\n\r\n  const handleChangePhotoClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleImageSave = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', imageToUpload);\r\n    props.onFileSave(formData);\r\n\r\n    setImagedTouched(false);\r\n  };\r\n\r\n  const handleImageDiscard = () => {\r\n    setImageToUpload({});\r\n    setImageSrc(props.defaultSrc || '');\r\n    setImagedTouched(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={handleChangePhotoClick}\r\n        style={{ backgroundImage: `url(${imageSrc})` }}\r\n        className={`profile-img profile-img-${theme}`}\r\n      >\r\n        <FontAwesomeIcon icon={faCamera} />\r\n        <div className=\"expanded-div\">\r\n          <span>Change photo</span>\r\n          <input\r\n            onChange={handleFileInputChange}\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            className=\"file-input\"\r\n            style={{ display: 'none' }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {imageTouched && (\r\n        <div className=\"photo-actions\">\r\n          {save && (\r\n            <span onClick={handleImageSave} className=\"save\">\r\n              Save\r\n            </span>\r\n          )}\r\n          {discard && (\r\n            <span onClick={handleImageDiscard} className=\"discard\">\r\n              Discard\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileInput;\r\n","import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport Button from '../../shared/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserData, uploadPhoto } from '../../actions/user';\r\nimport FileInput from '../../shared/FileInput/FileInput';\r\nimport serverConfig from '../../server-config';\r\n\r\nimport './Settings.css';\r\n\r\nfunction Settings(props) {\r\n  const { user } = props;\r\n  const [userImageSrc, setUserImageSrc] = useState('');\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\n  useEffect(() => {\r\n    setUserImageSrc(serverConfig.baseUrl + '/' + user.imageSrc);\r\n  }, [props]);\r\n\r\n  const handleFileSave = (formData) => {\r\n    props.dispatch(uploadPhoto(user._id, formData, props.jwt));\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    await fetch(`${serverConfig.baseUrl}/users/update/properties/${user._id}`, {\r\n      method: 'put',\r\n      headers: {\r\n        Authorization: `Bearer ${props.jwt}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n\r\n    props.dispatch(fetchUserData(user._id));\r\n  };\r\n\r\n  return (\r\n    user && (\r\n      <div className=\"app-profile-settings\">\r\n        <Formik\r\n          initialValues={{\r\n            name: user.name || '',\r\n            bio: user.bio || '',\r\n            github: user.github || '',\r\n            linkedin: user.linkedin || '',\r\n            facebook: user.facebook || '',\r\n          }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n\r\n            if (values.github && !/^https?:\\/\\/w?w?w?\\.?github\\.com/.test(values.github)) {\r\n              errors.github = 'Github link is not correct';\r\n            }\r\n\r\n            if (values.linkedin && !/^https?:\\/\\/w?w?w?\\.?linkedin\\.com/.test(values.linkedin)) {\r\n              errors.linkedin = 'Linkedin link is not correct';\r\n            }\r\n\r\n            if (values.facebook && !/^https?:\\/\\/w?w?w?\\.?facebook\\.com/.test(values.facebook)) {\r\n              errors.facebook = 'Facebook link is not correct';\r\n            }\r\n\r\n            if (!values.name) {\r\n              errors.name = 'Name is required';\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values) => handleSubmit(values)}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit} className=\"app-profile-settings-form \">\r\n              <FileInput defaultSrc={userImageSrc} options={['save', 'discard']} onFileSave={handleFileSave} />\r\n\r\n              <ThemedField>\r\n                <label style={{ marginTop: '20px' }}>Fullname</label>\r\n                <Field type=\"text\" name=\"name\" placeholder={`current name is ${user.name}`} />\r\n                <ErrorMessage name=\"name\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Tell others about yourself. Feel free...</label>\r\n                <Field type=\"text\" name=\"bio\" placeholder=\"I am a web develop...\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Github profile:</label>\r\n                <Field type=\"text\" name=\"github\" placeholder=\"https://github.com/<your_username>\" />\r\n                <ErrorMessage name=\"github\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Linkedin:</label>\r\n                <Field type=\"text\" name=\"linkedin\" placeholder=\"https://linkedin.com/in//<your_username>\" />\r\n                <ErrorMessage name=\"linkedin\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Facebook:</label>\r\n                <Field type=\"text\" name=\"facebook\" placeholder=\"https://facebook.com/profile...\" />\r\n                <ErrorMessage name=\"facebook\" component=\"span\" />\r\n              </ThemedField>\r\n              {props.children}\r\n              <Button type=\"submit\">Save</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user.userData, jwt: state.auth.token }))(Settings);\r\n","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport colors from '../../colors'\r\n\r\nimport './TopicsInputField.css';\r\n\r\n\r\nfunction TopicsInputField(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [topics, _setTopics] = useState([]);\r\n  const SPACE_CODE = 32;\r\n  const BACKSPACE_CODE = 8;\r\n\r\n  const setTopics = (tpc) => {\r\n    if (tpc.length <= props.max) {\r\n      _setTopics(tpc);\r\n      props.onTopicsChange(tpc);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    let {value} = e.target;\r\n\r\n    if (value.trim()) {\r\n      setTopics([...topics, value])\r\n      e.target.value = ''\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.trim();\r\n\r\n    if (e.keyCode === SPACE_CODE) {\r\n      value && setTopics([...topics, value]);\r\n      e.target.value = '';\r\n    } else if (!value && e.keyCode === BACKSPACE_CODE) {\r\n      setTopics([...topics.splice(0, topics.length - 1)]);\r\n    }\r\n  };\r\n\r\n  const handleTopicDelete = (topic) => {\r\n    setTopics(topics.filter((t) => t != topic));\r\n  };\r\n\r\n  const mapTopicsToList = () => {\r\n    return topics.map((topic) => {\r\n      return (\r\n        <li style={{background: colors.common.primary}} key={Math.random() * 10} className=\"topic\">\r\n          <span>{topic}</span>\r\n          <FontAwesomeIcon onClick={() => handleTopicDelete(topic)} className=\"icon\" icon={faTimes} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.children}\r\n      <div className={`topics-input topics-input-${theme}`}>\r\n        <div className=\"topics\">\r\n          <ul className=\"topics-list\">{mapTopicsToList()}</ul>\r\n        </div>\r\n        <input onBlur={handleBlur} onKeyDown={handleChange} type=\"text\" className=\"topics-input-field\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopicsInputField;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport { FormTitle } from '../Register/RegisterForm';\r\nimport Emoji from '../../shared/Emoji';\r\nimport FileInput from '../../shared/FileInput/FileInput';\r\nimport TopicsInputField from '../../shared/TopicsInputField/TopicsInputField';\r\nimport styled from 'styled-components';\r\nimport Button from '../../shared/Button/Button'\r\n\r\nimport './CreateTeamForm.css';\r\n\r\nconst FieldsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 700px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nfunction CreateTeamForm(props) {\r\n  const [technologies, setTechnologies] = useState([]);\r\n  const imageFormData = useRef()\r\n\r\n  const handleFileAttached = (formData) => {\r\n    imageFormData.current = formData;\r\n  };\r\n\r\n  const handleTechnologiesChange = (techs) => {\r\n    setTechnologies(techs);\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    props.onSubmit({...values, technologies, imageFormData: imageFormData.current})\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-create-team-form\">\r\n      <Formik\r\n        initialValues={{ name: '', description: '', technologies: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.name) {\r\n            errors.name = 'Team name is required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => (\r\n          <Form className={`app-form app-create-form`}>\r\n            <FileInput options={['discard']} onFileAttached={handleFileAttached} />\r\n\r\n            <FormTitle style={{ fontSize: '4rem' }}>\r\n              <span>Collaborate with friends</span>\r\n              <Emoji label=\"first-left\">🤜</Emoji>\r\n              <Emoji label=\"first-right\">🤛</Emoji>\r\n            </FormTitle>\r\n\r\n            <FormTitle style={{ fontSize: '2rem', marginBottom: '60px' }}>\r\n              <span>Create your own team!</span>\r\n            </FormTitle>\r\n\r\n            <FieldsContainer>\r\n              <ThemedField>\r\n                <label>Team name *</label>\r\n                <Field placeholder=\"Amazingteam1337\" type=\"text\" name=\"name\" />\r\n                <ErrorMessage name=\"name\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Team summary</label>\r\n                <Field placeholder=\"Our amazing team is gonna do...\" type=\"text\" name=\"description\" />\r\n                <ErrorMessage name=\"description\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <TopicsInputField max=\"6\" onTopicsChange={handleTechnologiesChange}>\r\n                <label>Technologes (such as node.js, react etc.) max 6</label>\r\n              </TopicsInputField>\r\n            </FieldsContainer>\r\n\r\n            <Button type=\"submit\">Create team</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTeamForm;\r\n","import React from 'react';\r\nimport CreateTeamForm from './CreateTeamForm';\r\nimport serverConfig from '../../server-config';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction CreateTeam(props) {\r\n  const handleSubmit = async (form) => {\r\n    const creationResponse = await fetch(`${serverConfig.baseUrl}/teams/create`, {\r\n      method: 'post',\r\n      headers: {\r\n        Authorization: `Bearer ${props.jwt}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: form.name,\r\n        description: form.description || '',\r\n        technologies: form.technologies || [],\r\n      }),\r\n    });\r\n\r\n    const { _id } = await creationResponse.json();\r\n\r\n    form.imageFormData && await fetch(`${serverConfig.baseUrl}/teams/upload/image/${_id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.jwt}`,\r\n      },\r\n      method: 'post',\r\n      body: form.imageFormData,\r\n    });\r\n\r\n    window.location.href = \"/#/teams/thread/\" + _id;\r\n  };\r\n\r\n  return <CreateTeamForm onSubmit={handleSubmit} />;\r\n}\r\n\r\nexport default connect((state) => ({ jwt: state.auth.token }))(CreateTeam);\r\n","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../../../Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faCog, faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport colors from '../../../../colors';\r\nimport { Link } from 'react-router-dom';\r\nimport serverConfig from '../../../../server-config';\r\n\r\nimport './TeamThread.css';\r\n\r\nconst InfoMessage = styled.div`\r\n  text-alight: center;\r\n  margin: 0 auto;\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.03);\r\n`;\r\n\r\nconst YourMessage = styled.div`\r\n  background: #0a0d14;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  padding: 15px 20px;\r\n  margin: 10px 0;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n\r\n    right: -5px;\r\n    bottom: 0;\r\n\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 0 20px 20px 20px;\r\n    border-color: transparent transparent #0a0d14 transparent;\r\n  }\r\n`;\r\n\r\nconst AnothersMessage = styled.div`\r\n  background: ${colors.common.primary};\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  padding: 15px 20px;\r\n  margin: 10px 0;\r\n  position: relative;\r\n  max-width: 80%;\r\n  margin-left: 20px;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n\r\n    left: -13px;\r\n    top: 0;\r\n\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 20px 20px 0px 20px;\r\n    border-color: ${colors.common.primary} transparent transparent transparent;\r\n  }\r\n`;\r\n\r\nconst Teammate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  & > .teammate-img {\r\n    width: 40px;\r\n    height: 40px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nfunction TeamPage(props) {\r\n  const { teamInfo, user } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const [msgInputValue, setMsgInputValue] = useState('');\r\n  const { socket } = props;\r\n  const messagesList = useRef();\r\n  const [messages, setMessages] = useState(teamInfo.conversation);\r\n\r\n  useEffect(() => {\r\n    messagesList.current.scrollTop = messagesList.current.scrollHeight;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('message recieved', (msg) => {\r\n        console.log('here msg recieved');\r\n        const newMessages = messages;\r\n        newMessages.push(msg);\r\n        setMessages([]);\r\n        setMessages(newMessages);\r\n\r\n        if (messagesList.current) {\r\n          messagesList.current.scrollTop = messagesList.current.scrollHeight;\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const getMsgType = (msg) => {\r\n    if (!msg.userId) {\r\n      return 'info';\r\n    } else if (msg.userId === user._id) {\r\n      return 'your';\r\n    } else {\r\n      return 'other';\r\n    }\r\n  };\r\n\r\n  const handleMsgInputChange = (e) => {\r\n    setMsgInputValue(e.target.value);\r\n  };\r\n\r\n  const handleTryP2PCall = (whom) => {\r\n    props.tryCall({ whom, teamId: teamInfo._id });\r\n  };\r\n\r\n  const handleMsgSend = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (msgInputValue.trim()) {\r\n      console.log('here msg send');\r\n      socket.emit('message send', { message: msgInputValue.trim(), userId: user._id, teamId: teamInfo._id });\r\n      setMsgInputValue('');\r\n    }\r\n  };\r\n\r\n  const displayMessages = () => {\r\n    return messages.map((msg) => {\r\n      const type = getMsgType(msg);\r\n\r\n      if (type === 'info') {\r\n        return (\r\n          <li style={{ alignSelf: 'center' }} key={msg._id}>\r\n            <InfoMessage>{msg.message}</InfoMessage>\r\n          </li>\r\n        );\r\n      } else if (type === 'your') {\r\n        return (\r\n          <li style={{ alignSelf: 'flex-end' }} key={msg._id}>\r\n            <YourMessage>{msg.message}</YourMessage>\r\n          </li>\r\n        );\r\n      } else {\r\n        const userInfo = teamInfo.teammates.find((t) => t._id === msg.userId);\r\n\r\n        return (\r\n          <li style={{ display: 'flex', alignSelf: 'flex-start' }} key={msg._id}>\r\n            <div\r\n              className=\"user-msg-img\"\r\n              style={{ backgroundImage: `url(${serverConfig.baseUrl}/${userInfo?.imageSrc})` }}\r\n            >\r\n              {!userInfo?.imageSrc && (userInfo?.name.substr(0, 2) || <span>X</span>)}\r\n            </div>\r\n\r\n            <AnothersMessage>\r\n              <span className=\"user-msg-name\">{userInfo?.name || 'Not a teammate anymore'}</span>\r\n              <span className=\"user-msg-text\">{msg.message}</span>\r\n            </AnothersMessage>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const displayTeammates = () => {\r\n    return teamInfo.teammates.map((teammate) => {\r\n      return (\r\n        <li style={{ margin: '10px 0' }} key={teammate._id}>\r\n          <Teammate className=\"teammate\">\r\n            <div\r\n              className=\"teammate-img\"\r\n              style={{ backgroundImage: `url(${serverConfig.baseUrl}/${teammate.imageSrc})` }}\r\n            >\r\n              {!teammate.imageSrc && teammate.name.substr(0, 2)}\r\n            </div>\r\n            <Link style={{ color: colors[theme].foreground }} to={`/profile/${teammate._id}`}>\r\n              {teammate.name}\r\n            </Link>\r\n            {user._id !== teammate._id && (\r\n              <span onClick={() => handleTryP2PCall(teammate)} className=\"try-call-btn\">\r\n                <FontAwesomeIcon icon={faPhoneAlt} /> Call\r\n              </span>\r\n            )}\r\n          </Teammate>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-page-main-section\">\r\n      <div className={`messages-container messages-container-${theme}`}>\r\n        <ul ref={messagesList} className=\"messages-list\">\r\n          {displayMessages()}\r\n        </ul>\r\n        <div className={`messages-input messages-input-${theme}`}>\r\n          <form onSubmit={handleMsgSend}>\r\n            <input\r\n              autoFocus={true}\r\n              type=\"text\"\r\n              value={msgInputValue}\r\n              placeholder=\"Type your message here...\"\r\n              onChange={handleMsgInputChange}\r\n            />\r\n            <button className=\"send-btn\">\r\n              <FontAwesomeIcon style={{ transform: 'rotate(45deg) translateY(-2px)' }} icon={faPaperPlane} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/*  */}\r\n      <div className=\"team-about-section\">\r\n        <h1 className=\"team-name\">\r\n          {teamInfo.name}\r\n          {teamInfo.ownerId === user._id && (\r\n            <Link\r\n              style={{ color: colors[theme].foreground }}\r\n              to={`/teams/thread/${teamInfo._id}/settings`}\r\n              className=\"team-settings-btn\"\r\n            >\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Link>\r\n          )}\r\n        </h1>\r\n        <ul className=\"teammates\">{displayTeammates()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamPage;\r\n","export const TRY_CALL = 'p2pcall/TRY_CALL';\r\nexport const tryCall = (subscriber) => {\r\n  return {\r\n    type: TRY_CALL,\r\n    payload: subscriber,\r\n  };\r\n};\r\n\r\nexport const CALL_RECIEVED = 'p2p/CALL_RECIEVED';\r\nexport const callRecieved = (from) => {\r\n  return {\r\n    type: CALL_RECIEVED,\r\n    payload: from,\r\n  };\r\n};\r\n\r\nexport const CALL_INTERRUPTED = 'p2p/CALL_INTERRUPTED';\r\nexport const callInterupted = () => {\r\n  return {\r\n    type: CALL_INTERRUPTED,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../../../server-config';\r\nimport TeamThread from './TeamThread/TeamThread';\r\nimport io from 'socket.io-client';\r\n\r\nimport { tryCall } from '../../../actions/p2p';\r\nimport { intializeSocket } from '../../../actions/socket';\r\n\r\nfunction TeamContainer(props) {\r\n  const [userIsTeammate, setUserIsTeammate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState(false);\r\n  const [socket, setSocket] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  const { teamId } = props.match.params;\r\n\r\n  const fetchTeamData = async () => {\r\n    if (teamInfo || !props.auth) return;\r\n\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/by/id/${teamId}`);\r\n    const json = await response.json();\r\n\r\n    setTeamInfo(json);\r\n\r\n    const ids = json.teammates.map((teammate) => teammate.userId);\r\n    const result = ids.some((id) => id === props.user.userData._id);\r\n\r\n    setUserIsTeammate(result);\r\n  };\r\n\r\n  const handleCallTry = (whom) => {\r\n    props.dispatch(tryCall(whom));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const payloadReady = props.auth.token && teamInfo;\r\n\r\n    if (payloadReady && !connected) {\r\n      const sock = io(serverConfig.baseUrl, {\r\n        query: {\r\n          token: props.auth.token,\r\n          method: 'connect',\r\n          teamId: teamInfo._id,\r\n        },\r\n      });\r\n\r\n      setSocket(sock);\r\n      setConnected(true);\r\n      props.dispatch(intializeSocket(sock));\r\n    }\r\n  }, [props.auth.token, teamInfo]);\r\n\r\n  useEffect(() => {\r\n    fetchTeamData();\r\n  }, [props.user.userData._id, props.auth]);\r\n\r\n  return (\r\n    teamInfo && (\r\n      <TeamThread\r\n        tryCall={(whom) => handleCallTry(whom)}\r\n        user={props.user.userData}\r\n        token={props.auth.token}\r\n        teamInfo={teamInfo}\r\n        socket={socket}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ socket: state.socket, auth: state.auth, user: state.user, p2p: state.p2p }))(\r\n  TeamContainer\r\n);\r\n","export const INITIALIZE_SOCKET = 'socket/INITIALIZE_SOCKET';\r\nexport const intializeSocket = (socket) => {\r\n  return {\r\n    type: INITIALIZE_SOCKET,\r\n    payload: socket,\r\n  };\r\n};\r\n","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport ThemedField from '../../../shared/ThemedField/ThemedField';\r\nimport colors from '../../../colors';\r\nimport { ThemeContext } from '../../../core/Page/Page';\r\nimport serverConfig from '../../../server-config';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './TeamSettings.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TeamSettings(props) {\r\n  const { team } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const [searchedUsers, setSearchedUsers] = useState([]);\r\n  const userSearchInput = useRef();\r\n\r\n  const handleUserSearch = async (val) => {\r\n    if (val.length < 3) {\r\n      setSearchedUsers([]);\r\n      return;\r\n    }\r\n\r\n    const data = val.split(' ').join('+');\r\n\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/search/by/name/${data}`);\r\n    const json = await response.json();\r\n\r\n    const filtered = json.filter((user) => {\r\n      const teammatesIds = team.teammates.map((t) => t._id);\r\n      return !teammatesIds.includes(user._id) && user.emailConfirmed;\r\n    });\r\n\r\n    const users = filtered.map((u) => {\r\n      if (team.invitations.map((inv) => inv.userId).includes(u._id)) {\r\n        return { ...u, invited: true };\r\n      }\r\n\r\n      return { ...u, invited: false };\r\n    });\r\n\r\n    setSearchedUsers(users);\r\n  };\r\n\r\n  const handleUserInvitation = async (action, userId) => {\r\n    userSearchInput.current.value = '';\r\n\r\n    await fetch(`${serverConfig.baseUrl}/teams/${action}/${team._id}/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.token}`,\r\n      },\r\n    });\r\n\r\n    setSearchedUsers([]);\r\n    props.onTeamChanged();\r\n  };\r\n\r\n  const handleUserInviteClick = async (userId) => {\r\n    handleUserInvitation('invite', userId);\r\n  };\r\n\r\n  const handleInvitationWithdrawClick = async (userId) => {\r\n    handleUserInvitation('withdraw', userId);\r\n  };\r\n\r\n  const handleParticipantReject = async (userId) => {\r\n    const confirm = window.confirm('Are you sure you want to reject this participant?');\r\n\r\n    if (confirm) {\r\n      await fetch(`${serverConfig.baseUrl}/teams/update/${team._id}/teammates/kick/${userId}`, {\r\n        method: 'put',\r\n        headers: {\r\n          Authorization: `Bearer ${props.token}`,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const event = fromEvent(userSearchInput.current, 'input').pipe(\r\n      map((e) => e.target.value),\r\n      debounceTime(500),\r\n      distinctUntilChanged()\r\n    );\r\n    const subscription = event.subscribe((val) => handleUserSearch(val));\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  const editableTeammates = () => {\r\n    return team.teammates.map((teammate) => {\r\n      return (\r\n        <li key={teammate._id}>\r\n          <EditableTeammate\r\n            key={teammate._id}\r\n            onReject={handleParticipantReject}\r\n            user={props.user}\r\n            teammate={teammate}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const mapSearchResult = () => {\r\n    return searchedUsers.map((user) => {\r\n      return (\r\n        <li className=\"user-mini\" key={user._id}>\r\n          <div\r\n            className=\"user-mini-img\"\r\n            style={{ backgroundImage: `url(${serverConfig.baseUrl}/${user.imageSrc})` }}\r\n          ></div>\r\n          <Link target=\"_blank\" to={`/profile/${user._id}`}>\r\n            {user.name}\r\n          </Link>\r\n          <span className=\"user-mini-uuid\" style={{ color: theme === 'dark' ? '#43527B' : '#b2b2b2' }}>\r\n            #{user.uuid}\r\n          </span>\r\n\r\n          {user.invited ? (\r\n            <>\r\n              <button\r\n                disabled={true}\r\n                onClick={() => handleUserInviteClick(user._id)}\r\n                className=\"disabled user-invite-btn\"\r\n              >\r\n                Pending\r\n              </button>\r\n\r\n              <button onClick={() => handleInvitationWithdrawClick(user._id)} className=\"user-withdraw-btn\">\r\n                Withdraw\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button onClick={() => handleUserInviteClick(user._id)} className=\"user-invite-btn\">\r\n              Invite\r\n            </button>\r\n          )}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const mapAlreadyInvitedUsers = () => {\r\n    return team.invitations.map((user) => {\r\n      return (\r\n        <li className=\"user-mini\" key={user.userId}>\r\n          <div\r\n            className=\"user-mini-img\"\r\n            style={{ backgroundImage: `url(${serverConfig.baseUrl}/${user.imageSrc})` }}\r\n          ></div>\r\n          <Link style={{ marginRight: '15px' }} target=\"_blank\" to={`/profile/${user._id}`}>\r\n            {user.name}\r\n          </Link>\r\n          <button onClick={() => handleInvitationWithdrawClick(user.userId)} className=\"user-withdraw-btn\">\r\n            Withdraw\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-settings-container\">\r\n      <h1 className=\"team-name-header\">{team.name}</h1>\r\n      <div className=\"teammates-container\">\r\n        <ul className=\"teammates-list\">{editableTeammates()}</ul>\r\n      </div>\r\n\r\n      <div className=\"invite-teammate-container\" style={{ borderColor: colors[theme].foreground }}>\r\n        <h2 className=\"secondary-settings-header\">Already invited users</h2>\r\n        <ul className=\"search-result-list\">{mapAlreadyInvitedUsers()}</ul>\r\n      </div>\r\n\r\n      <div className=\"invite-teammate-container\" style={{ borderColor: colors[theme].foreground }}>\r\n        <h2 className=\"secondary-settings-header\">Invite participants</h2>\r\n        <ThemedField>\r\n          <label>Global users search</label>\r\n          <input ref={userSearchInput} type=\"text\" placeholder=\"type name or uid here...\" />\r\n        </ThemedField>\r\n        <ul className=\"search-result-list\">{mapSearchResult()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EditableTeammate({ teammate, user, onReject }) {\r\n  const { theme } = useContext(ThemeContext);\r\n  console.log(teammate);\r\n\r\n  return (\r\n    <div className=\"user-mini\" key={teammate._id}>\r\n      <div\r\n        className=\"user-mini-img\"\r\n        style={{\r\n          borderColor: colors[theme].foreground,\r\n          backgroundImage: `url(${serverConfig.baseUrl}/${teammate.imageSrc})`,\r\n        }}\r\n      >\r\n        {!teammate.imageSrc && <span>{teammate.name.substr(0, 2)}</span>}\r\n      </div>\r\n      <Link\r\n        style={{ color: colors[theme].foreground, marginRight: '5px' }}\r\n        target=\"_blank\"\r\n        to={`/profile/${teammate._id}`}\r\n      >\r\n        {teammate.name}\r\n      </Link>\r\n      <ul className=\"roles-list\">\r\n        {teammate.roles.map((role) => {\r\n          return (\r\n            <li key={role}>\r\n              <div style={{ backgroundColor: role.toLowerCase() === 'owner' && 'red' }} className=\"role\">\r\n                {role}\r\n                <span style={{ marginLeft: '10px' }}>\r\n                  <FontAwesomeIcon className=\"icon\" icon={faTimes} />\r\n                </span>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {teammate._id !== user._id && (\r\n        <span onClick={() => onReject(teammate._id)} style={{ backgroundColor: 'red' }} className=\"role-handler-btn\">\r\n          Reject Participant\r\n        </span>\r\n      )}\r\n      <span style={{ backgroundColor: colors.common.primary }} className=\"role-handler-btn\">\r\n        + Add role\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamSettings;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TeamSettings from './TeamSettings';\r\nimport serverConfig from '../../../server-config';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TeamSettingsContainer(props) {\r\n  const { teamId } = props.match.params;\r\n  const [teamInfo, setTeamInfo] = useState(false);\r\n  const { user } = props;\r\n\r\n  const fetchTeamInfo = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/by/id/${teamId}`);\r\n    const teamJson = await response.json();\r\n\r\n    if (user._id === teamJson.ownerId) {\r\n      setTeamInfo(teamJson);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchTeamInfo();\r\n    }\r\n  }, [user]);\r\n\r\n  return teamInfo && <TeamSettings onTeamChanged={fetchTeamInfo} user={user} token={props.token} team={teamInfo} />;\r\n}\r\n\r\nexport default connect((state) => ({ token: state.auth.token, user: state.user.userData }))(TeamSettingsContainer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport serverConfig from '../../../server-config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport './TeamPublicView.css';\r\n\r\nfunction TeamPubclicView(props) {\r\n  const { teamId } = props.match.params;\r\n  const [team, setTeamInfo] = useState(false);\r\n\r\n  const fetchTeamInfo = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/${teamId}/public`);\r\n    const json = await response.json();\r\n\r\n    setTeamInfo(json);\r\n    console.log(json)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeamInfo();\r\n  }, []);\r\n\r\n  const mapTechnologies = (team) => {\r\n    if (team.technologies && team.technologies.length > 0) {\r\n      return team.technologies.map((tech, index) => {\r\n        return <li key={index}>{tech}</li>\r\n      })\r\n    }\r\n  }\r\n\r\n  return team ? (\r\n    <div className=\"team-main-container\">\r\n      <div className=\"team-img\" style={{ backgroundImage: `url(${serverConfig.baseUrl}/${team.imageSrc})` }}></div>\r\n      <h1 className=\"team-name\">{team.name}</h1>\r\n      <div className=\"techonologies\">\r\n        <ul>{mapTechnologies(team)}</ul>\r\n      </div>\r\n      <h3 className=\"team-description\">{team.description}</h3>\r\n      <h3 className=\"team-teammates\">\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        <span>{team.teammates}</span>\r\n      </h3>\r\n    </div>\r\n  ) : (\r\n    <p>loading...</p>\r\n  );\r\n}\r\n\r\nexport default TeamPubclicView;\r\n","import React, { useContext, useRef, useEffect, useState } from 'react';\r\nimport './GlobalSearch.css';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport { Link } from 'react-router-dom';\r\nimport { fromEvent } from 'rxjs';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\nimport serverConfig from '../../server-config';\r\n\r\nfunction GlobalSearch() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const searchFieldRef = useRef();\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const event = fromEvent(searchFieldRef.current, 'input').pipe(\r\n      map((e) => e.target.value),\r\n      debounceTime(500),\r\n      distinctUntilChanged()\r\n    );\r\n    const subscription = event.subscribe((val) => handleSearchChange(val));\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  const handleSearchChange = async (val) => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/search/${val}`);\r\n    const json = await response.json();\r\n\r\n    setUsers(json);\r\n  };\r\n\r\n  const mapResults = () => {\r\n    return users.map((user) => {\r\n      return (\r\n        <li key={user._id}>\r\n          <UserPreview {...user} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-search-container\">\r\n      <div className=\"search-bar\">\r\n        <h1>Find teammate by name or technology</h1>\r\n        <input\r\n          ref={searchFieldRef}\r\n          placeholder=\"Steve Jo...\"\r\n          className={`search-field search-field-${theme}`}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"search-results\">\r\n        <ul>{mapResults()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserPreview({ name, _id, bio, imageSrc }) {\r\n  const formatBio = (bio) => {\r\n    return `${bio.substr(0, 200)}...`;\r\n  };\r\n\r\n  return (\r\n    <Link style={{ margin: '30px' }} to={`/profile/${_id}`}>\r\n      <div className=\"user-preview-container\">\r\n        <div style={{ backgroundImage: `url(${serverConfig.baseUrl}/${imageSrc})` }} className=\"user-image-wrap\"></div>\r\n        <div className=\"user-info\">\r\n          <h3>{name}</h3>\r\n          <h4>{formatBio(bio)}</h4>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default GlobalSearch;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport serverConfig from '../../server-config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophone, faMicrophoneSlash, faVideo, faPhone, faVideoSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { callRecieved, callInterupted } from '../../actions/p2p';\r\n\r\nimport './Call.css';\r\n\r\nconst iceConfig = {\r\n  iceServers: [\r\n    {\r\n      urls: 'stun:numb.viagenie.ca',\r\n      username: 'sultan1640@gmail.com',\r\n      credential: '98376683',\r\n    },\r\n    {\r\n      urls: 'turn:numb.viagenie.ca',\r\n      username: 'sultan1640@gmail.com',\r\n      credential: '98376683',\r\n    },\r\n  ],\r\n};\r\n\r\nfunction Call(props) {\r\n  const { user, p2p } = props;\r\n  const { socket } = props;\r\n  const localStream = useRef();\r\n  const ringtoneAudio = useRef();\r\n  const localVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const yourPeer = useRef();\r\n  const anotherPeer = useRef();\r\n  const [subscriber, setSubscriber] = useState(false);\r\n  const [calling, setCalling] = useState(false);\r\n  const [incomingCall, setIncomingCall] = useState(false);\r\n  const [localAudioEnabled, setLocalAudioEnabled] = useState(true);\r\n  const [localVideoEnabled, setLocalVideoEnabled] = useState(true);\r\n  const [teamId, setTeamId] = useState(null);\r\n\r\n  const callerData = useRef();\r\n\r\n  let callEstablished = false;\r\n\r\n  const fetchStreamFromMediaDevices = async (video) => {\r\n    let stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n    setLocalVideoEnabled(video);\r\n\r\n    stream.getVideoTracks()[0].enabled = video;\r\n\r\n    localVideo.current.srcObject = stream;\r\n    localStream.current = stream;\r\n    // localStream.current.getVideoTracks()[0].enabled = video;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket || !user) return;\r\n\r\n    socket.on('you have a call', (data) => {\r\n      if (data.to.userId !== user._id) {\r\n        return;\r\n      }\r\n\r\n      setTeamId(data.to.teamId);\r\n      props.dispatch(callRecieved(data.from));\r\n      callerData.current = data;\r\n    });\r\n  }, [socket, user]);\r\n\r\n  const acceptCall = async (video) => {\r\n    ringtoneAudio.current.muted = true;\r\n    ringtoneAudio.current.src = '';\r\n    setIncomingCall(false);\r\n\r\n    await fetchStreamFromMediaDevices(video);\r\n    setCalling(true);\r\n    const stream = localStream.current;\r\n\r\n    const data = callerData.current;\r\n\r\n    anotherPeer.current = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n      config: iceConfig,\r\n    });\r\n\r\n    anotherPeer.current.on('signal', (answer) => {\r\n      socket.emit('accept call', {\r\n        signalFromPartner: answer,\r\n        from: { name: user.name, imageSrc: user.imageSrc, userId: user._id },\r\n        to: {\r\n          teamId: data.to.teamId,\r\n          userId: data.from.userId,\r\n        },\r\n      });\r\n    });\r\n\r\n    anotherPeer.current.on('stream', (stream) => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    anotherPeer.current.on('close', () => {});\r\n\r\n    if (!callEstablished) {\r\n      callEstablished = true;\r\n      anotherPeer.current.signal(data.signalFromCaller);\r\n    }\r\n\r\n    socket.on('call interrupted', (data) => {\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  const tryCall = async () => {\r\n    setCalling(true);\r\n    await fetchStreamFromMediaDevices(false);\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: localStream.current,\r\n      config: iceConfig,\r\n    });\r\n\r\n    yourPeer.current = peer;\r\n\r\n    peer.on('signal', (signal) => {\r\n      if (!callEstablished) {\r\n        callEstablished = true;\r\n        socket.emit('try call', {\r\n          signalFromCaller: signal,\r\n          from: { name: user.name, imageSrc: user.imageSrc, userId: user._id },\r\n          to: {\r\n            teamId: p2p.subscriber.teamId,\r\n            userId: p2p.subscriber.whom._id,\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    peer.on('stream', (stream) => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    socket.on('call accepted', (data) => {\r\n      peer.signal(data.signalFromPartner);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      handleCallDown();\r\n    });\r\n    socket.on('call interrupted', (data) => {\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  const handleVideoSwitch = () => {\r\n    localStream.current.getVideoTracks()[0].enabled = !localStream.current.getVideoTracks()[0].enabled;\r\n    setLocalVideoEnabled(!localVideoEnabled);\r\n  };\r\n\r\n  const handleAudioSwitch = () => {\r\n    localStream.current.getAudioTracks()[0].enabled = !localStream.current.getAudioTracks()[0].enabled;\r\n    setLocalAudioEnabled(!localAudioEnabled);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCalling(props.p2p.tryCall);\r\n    setSubscriber(props.p2p.subscriber);\r\n\r\n    if (props.p2p.tryCall) {\r\n      tryCall(props.p2p.subscriber);\r\n    }\r\n  }, [props.p2p.tryCall]);\r\n\r\n  useEffect(() => {\r\n    if (p2p.callFrom) {\r\n      ringtoneAudio.current.muted = false;\r\n      setIncomingCall(true);\r\n      ringtoneAudio.current.src = 'https://dev-parties.herokuapp.com/audio/rington1.mp3';\r\n      ringtoneAudio.current.play();\r\n    }\r\n  }, [p2p.callFrom]);\r\n\r\n  const handleCallDown = () => {\r\n    socket.emit('put call down', { to: { teamId } });\r\n\r\n    ringtoneAudio.current.muted = true;\r\n    ringtoneAudio.current.src = '';\r\n    setIncomingCall(false);\r\n    props.dispatch(callRecieved(null));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <audio muted={true} ref={ringtoneAudio} src=\"\"></audio>\r\n\r\n      <div className={`incoming-call ${incomingCall ? 'incoming-show' : 'incoming-hide'}`}>\r\n        <div className=\"incoming-user-img\" style={{ backgroundUrl: p2p.callFrom?.imageSrc }}>\r\n          {p2p.callFrom?.name.substr(0, 2)}\r\n        </div>\r\n        <div className=\"incoming-user-name\">{p2p.callFrom?.name}</div>\r\n        <div className=\"incoming-call-buttons\">\r\n          <div\r\n            onClick={() => acceptCall(false)}\r\n            style={{ background: '#42AF2C' }}\r\n            className=\"micro-switch-btn call-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faMicrophone} />\r\n          </div>\r\n          <div onClick={() => acceptCall(true)} style={{ background: '#42AF2C' }} className=\"video-switch-btn call-btn\">\r\n            <FontAwesomeIcon icon={faVideo} />\r\n          </div>\r\n          <div\r\n            onClick={() => handleCallDown()}\r\n            style={{ background: '#DF3A3A', transform: 'rotate(-138deg)' }}\r\n            className=\"end-call-btn call-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faPhone} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`call-container ${calling && 'show-mini'}`}>\r\n        {/* {props.p2p.tryCall && <span>Calling to {subscriber?.whom.name}</span>} */}\r\n        <video id=\"localVideo\" ref={localVideo} autoPlay muted />\r\n        <video id=\"partnerVideo\" ref={partnerVideo} autoPlay />\r\n\r\n        <div className=\"call-buttons\">\r\n          <div\r\n            style={{ background: localAudioEnabled ? '#42AF2C' : '#DF3A3A' }}\r\n            onClick={handleAudioSwitch}\r\n            className=\"micro-switch-btn call-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={localAudioEnabled ? faMicrophone : faMicrophoneSlash} />\r\n          </div>\r\n          <div\r\n            style={{ background: localVideoEnabled ? '#42AF2C' : '#DF3A3A' }}\r\n            onClick={handleVideoSwitch}\r\n            className=\"video-switch-btn call-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={localVideoEnabled ? faVideo : faVideoSlash} />\r\n          </div>\r\n          <div\r\n            onClick={() => handleCallDown()}\r\n            style={{ background: '#DF3A3A', transform: 'rotate(-138deg)' }}\r\n            className=\"end-call-btn call-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faPhone} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ p2p: state.p2p, socket: state.socket.socket, user: state.user.userData }))(Call);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../server-config';\r\nimport Emoji from '../shared/Emoji';\r\n\r\nfunction ReconfirmEmail({ email, token, userId }) {\r\n  const sendConfirmationEmail = async () => {\r\n    if (!token) return;\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/email/confirm`, {\r\n      method: 'post',\r\n      body: JSON.stringify({ redirectUrl: `${window.location.origin}/#/profile/${userId}` }),\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendConfirmationEmail();\r\n  }, [userId]);\r\n\r\n  return email ? (\r\n    <div\r\n      style={{ height: '90vh', display: 'flex', textAlign: 'center', justifyContent: 'center', alignItems: 'center' }}\r\n    >\r\n      <h1 style={{ fontSize: '4rem', margin: '40px' }}>\r\n        Confirmation email has been sent to <br />\r\n        <Emoji label=\"email\">💌</Emoji>\r\n        <span style={{ color: 'deeppink' }}>{email}</span>\r\n        <Emoji label=\"email\">💌</Emoji>\r\n      </h1>\r\n    </div>\r\n  ) : (\r\n    <p>loading...</p>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  email: state.user.userData.email,\r\n  token: state.auth.token,\r\n  userId: state.user.userData._id,\r\n}))(ReconfirmEmail);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './core/Home/Home';\r\nimport Register from './core/Register/Register';\r\nimport Page from './core/Page/Page';\r\nimport Header from './core/Header/Header';\r\nimport EmailSendedAlert from './core/EmailSendedAlert';\r\nimport Login from './core/Login/Login';\r\nimport Profile from './core/Profile/Profile';\r\nimport Settings from './core/Settings/Settings';\r\nimport CreateTeam from './core/Teams/CreateTeam';\r\nimport TeamContainer from './core/Teams/Team/TeamContainer';\r\nimport TeamSettingsContainer from './core/Teams/TeamSettings/TeamSettingsContainer';\r\nimport TeamPublicView from './core/Teams/TeamPublicView/TeamPublicView';\r\nimport GlobalSearch from './core/GlobalSearch/GlobalSearch';\r\n\r\nimport Call from './core/Call/Call';\r\n\r\nimport { refreshAccessToken } from './actions/auth';\r\nimport ReconfirmEmail from './core/ReconfirmEmail';\r\n\r\nfunction App({ dispatch, signedIn }) {\r\n  useEffect(() => {\r\n    dispatch(refreshAccessToken());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Page>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/profile/:userId\" component={Profile} />\r\n          <Route path=\"/search\" component={GlobalSearch} />\r\n\r\n          <Route path=\"/confirm/\" signedIn={signedIn} component={EmailSendedAlert} />\r\n          <GuardedRoute path=\"/settings/\" signedIn={signedIn} component={Settings} />\r\n          <GuardedRoute path=\"/teams/create\" signedIn={signedIn} component={CreateTeam} />\r\n          <GuardedRoute path=\"/teams/thread/:teamId\" exact={true} component={TeamContainer} signedIn={signedIn} />\r\n          <GuardedRoute path=\"/teams/thread/:teamId/settings\" component={TeamSettingsContainer} signedIn={signedIn} />\r\n          <GuardedRoute path=\"/re-confirm/\" signedIn={signedIn} component={ReconfirmEmail} />\r\n\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route signedIn={signedIn} path=\"/team/:teamId\" component={TeamPublicView} />\r\n        </Switch>\r\n\r\n        <Call />\r\n      </Page>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst GuardedRoute = ({ component, signedIn, ...rest }) => (\r\n  <Route {...rest} component={component}>\r\n    {signedIn == 'false' && <Redirect to=\"/\" />}\r\n  </Route>\r\n);\r\n\r\nexport default connect((state) => ({ signedIn: state.auth.signedIn }))(App);\r\n","import { handleActions } from 'redux-actions';\r\nimport { RECIEVE_TOKENS, SET_ERROR_TEXT, CLEAR_AUTH_DATA } from '../actions/auth';\r\n\r\nconst authReducer = handleActions(\r\n  {\r\n    [RECIEVE_TOKENS]: (state, action) => ({\r\n      ...state,\r\n      token: action.payload.token,\r\n      userId: action.payload.userId,\r\n      errorText: '',\r\n      signedIn: 'true',\r\n    }),\r\n    [SET_ERROR_TEXT]: (state, action) => ({\r\n      ...state,\r\n      errorText: action.payload.errorText,\r\n    }),\r\n    [CLEAR_AUTH_DATA]: (state, action) => ({\r\n      ...state,\r\n      userId: '',\r\n      token: '',\r\n      signedIn: 'false',\r\n    }),\r\n  },\r\n  { userId: '', token: '', errorText: '', signedIn: localStorage.getItem('signedIn') || 'false' }\r\n);\r\n\r\nexport default authReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { RECIEVE_USER_DATA, CLEAR_USER_DATA } from '../actions/user';\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [RECIEVE_USER_DATA]: (state, action) => ({\r\n      ...state,\r\n      userData: action.payload,\r\n      errorText: '',\r\n    }),\r\n    [CLEAR_USER_DATA]: (state, action) => ({\r\n      ...state,\r\n      userData: '',\r\n    }),\r\n  },\r\n  { userData: '', errorText: '' }\r\n);\r\n\r\nexport default userReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { TRY_CALL, CALL_RECIEVED, CALL_INTERRUPTED } from '../actions/p2p';\r\n\r\nconst p2preducer = handleActions(\r\n  {\r\n    [TRY_CALL]: (state, action) => ({\r\n      ...state,\r\n      tryCall: true,\r\n      subscriber: action.payload,\r\n    }),\r\n\r\n    [CALL_RECIEVED]: (state, action) => ({\r\n      ...state,\r\n      callFrom: action.payload,\r\n    }),\r\n\r\n    [CALL_INTERRUPTED]: (state, action) => ({\r\n      ...state,\r\n      tryCall: false,\r\n      callFrom: null,\r\n      subscriber: null,\r\n    }),\r\n  },\r\n  { tryCall: false, subscriber: null, callFrom: null }\r\n);\r\n\r\nexport default p2preducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { INITIALIZE_SOCKET } from '../actions/socket';\r\n\r\nconst socketReducer = handleActions(\r\n  {\r\n    [INITIALIZE_SOCKET]: (state, action) => ({\r\n      ...state,\r\n      socket: action.payload,\r\n    }),\r\n  },\r\n  { socket: null }\r\n);\r\n\r\nexport default socketReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\nimport userReducer from './user';\r\nimport p2preducer from './p2p';\r\nimport socketReducer from './socket';\r\n\r\nexport default combineReducers({ auth: authReducer, user: userReducer, p2p: p2preducer, socket: socketReducer });\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}