{"version":3,"sources":["core/Home.js","core/Page/Page.js","colors.js","shared/Button/Button.js","shared/ThemedField/ThemedField.js","server-config.js","core/Register/RegisterForm.js","core/Register/Register.js","core/Header/ThemeSwitcherButton.js","actions/user.js","actions/auth.js","core/Header/Header.js","core/EmailSendedAlert.js","core/Login/LoginForm.js","core/Login/Login.js","shared/Emoji.js","core/Profile/ProfileView.js","core/Profile/Profile.js","shared/FileInput/FileInput.js","core/Settings/Settings.js","shared/TopicsInputField/TopicsInputField.js","core/Teams/CreateTeamForm.js","core/Teams/CreateTeam.js","core/Teams/Team/TeamThread/TeamThread.js","core/Teams/Team/TeamContainer.js","actions/socket.js","actions/p2p.js","core/Teams/TeamSettings/TeamSettings.js","core/Teams/TeamSettings/TeamSettingsContainer.js","core/Teams/TeamPublicView/TeamPublicView.js","core/Call/Call.js","core/ReconfirmEmail.js","App.js","reducers/auth.js","reducers/user.js","reducers/p2p.js","reducers/socket.js","reducers/index.js","index.js"],"names":["Home","className","ThemeContext","createContext","Page","children","useState","theme","setTheme","useEffect","savedTheme","localStorage","getItem","setItem","Provider","value","toggleTheme","dark","body","foreground","light","common","primary","Button","props","useContext","style","background","colors","boxShadow","defaultProps","type","ThemedField","config","baseUrl","FormTitle","styled","h2","spinning","keyframes","FieldSpinner","div","RegisterForm","emailRegex","passwordRegex","emailError","setEmailError","emailChecking","setEmailChecking","emailDirty","setEmailDirty","myHandleBlur","e","handleBlur","a","email","target","test","fetch","serverConfig","res","text","error","status","initialValues","fullname","password","repeat_password","validate","values","errors","onSubmit","setSubmitting","isSubmitting","aria-label","role","autoFocus","placeholder","name","component","onBlur","emailCheckEr","emailValidationEr","getEmailErrors","Register","history","handleSubmit","method","headers","JSON","stringify","redirectUrl","window","location","origin","ok","push","pathname","ThemeSwitcherButton","border","outline","color","cursor","fontSize","recieveUserData","data","payload","fetchUserData","userId","dispatch","Accept","response","json","recieveTokens","token","requestLogin","credentials","href","errorText","connect","state","user","userData","id","_id","menuState","setMenuState","redirect","setRedirect","setSignedUserData","backgroundColor","to","onClick","icon","faMoon","faSun","faUser","faCog","faSignOutAlt","EmailSendedAlert","margin","textDecoration","path","Login","FormError","auth","loginError","Emoji","label","ProfileView","handleInvitationAction","action","teamId","Authorization","backgroundImage","imageSrc","imageName","faCamera","owner","display","flexDirection","alignItems","invitations","length","map","inv","key","emailConfirmed","marginTop","marginRight","faEnvelope","marginLeft","uuid","teams","team","borderColor","confirmed","isConfirmed","match","setUserData","isOwner","setIsOwner","fetchUser","params","FileInput","imageToUpload","setImageToUpload","save","setShowSave","discard","setShowDiscard","setImageSrc","imageTouched","setImagedTouched","fileInputRef","useRef","defaultSrc","options","indexOf","handleImageSave","formData","FormData","append","onFileSave","current","click","onChange","file","files","blob","Blob","url","URL","createObjectURL","onFileAttached","ref","jwt","userImageSrc","setUserImageSrc","handleFileSave","TopicsInputField","topics","_setTopics","setTopics","tpc","max","onTopicsChange","topic","Math","random","filter","t","handleTopicDelete","faTimes","trim","onKeyDown","keyCode","splice","FieldsContainer","CreateTeamForm","technologies","setTechnologies","imageFormData","handleFileAttached","handleTechnologiesChange","techs","description","marginBottom","form","creationResponse","InfoMessage","YourMessage","AnothersMessage","Teammate","TeamPage","teamInfo","msgInputValue","setMsgInputValue","socket","messagesList","conversation","messages","setMessages","scrollTop","scrollHeight","on","msg","newMessages","getMsgType","alignSelf","message","userInfo","teammates","find","preventDefault","emit","transform","faPaperPlane","teammate","whom","tryCall","faPhoneAlt","p2p","setUserIsTeammate","setTeamInfo","setSocket","fetchTeamData","ids","result","some","sock","io","query","intializeSocket","handleCallTry","EditableTeammate","TeamSettings","searchedUsers","setSearchedUsers","userSearchInput","handleUserSearch","val","split","join","filtered","includes","users","u","invited","handleUserInvitation","onTeamChanged","handleUserInviteClick","handleInvitationWithdrawClick","subscription","fromEvent","pipe","debounceTime","distinctUntilChanged","subscribe","unsubscribe","disabled","fetchTeamInfo","TeamPubclicView","faUsers","localStream","localVideo","yourPeer","anotherPeer","subscriber","setSubscriber","calling","setCalling","localAudioEnabled","setLocalAudioEnabled","localVideoEnabled","setLocalVideoEnabled","fetchStreamFromMediaDevices","navigator","mediaDevices","getUserMedia","video","audio","stream","srcObject","getVideoTracks","enabled","Peer","initiator","trickle","console","log","peer","signal","signalFromCaller","from","autoPlay","muted","getAudioTracks","faMicrophone","faMicrophoneSlash","faVideo","faVideoSlash","faPhoneSlash","sendConfirmationEmail","height","textAlign","justifyContent","GuardedRoute","signedIn","rest","signed","Profile","Settings","CreateTeam","exact","TeamContainer","TeamSettingsContainer","ReconfirmEmail","TeamPublicView","authReducer","handleActions","userReducer","p2preducer","socketReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae03189.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home() {\r\n  return <div className=\"app-home\">This is home component</div>;\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport './Page.css';\r\n\r\nexport const ThemeContext = createContext('dark');\r\n\r\nfunction Page({ children }) {\r\n  const [theme, setTheme] = useState('dark');\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('dev-parties-theme') || 'dark';\r\n    setTheme(savedTheme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('dev-parties-theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    const savedTheme = localStorage.getItem('dev-parties-theme');\r\n    setTheme(savedTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <div className={`app-page app-page-${theme}`}>{children}</div>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","export default {\r\n  dark: {\r\n    body: '#0a0d14',\r\n    foreground: '#eee',\r\n  },\r\n\r\n  light: {\r\n    body: '#f5f5f5',\r\n    foreground: '#131313',\r\n  },\r\n\r\n  common: {\r\n    primary: '#673AB7',\r\n  },\r\n};\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport colors from '../../colors';\r\n\r\nimport './Button.css';\r\n\r\nfunction Button(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = {\r\n    background: theme === 'dark' ? 'rgb(23 29 45)' : colors.common.primary,\r\n    boxShadow: `2px 2px 3px ${theme === 'dark' ? '#000' : '#888'}`,\r\n  };\r\n\r\n  return (\r\n    <button {...props} style={{ ...style, ...props.style }} className=\"app-button\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf(['button', 'submit']),\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n};\r\n\r\nexport default Button;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport './ThemedField.css';\r\n\r\nfunction ThemedField(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div {...props} className={`form-field form-field-${theme}`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemedField;\r\n","const config = {\r\n  baseUrl: 'https://dev-parties.herokuapp.com',\r\n};\r\n\r\nexport default config;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport colors from '../../colors';\r\nimport serverConfig from '../../server-config';\r\n\r\nimport './RegisterForm.css';\r\n\r\nexport const FormTitle = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst spinning = keyframes`\r\n  0% { transform: rotate(0deg) }\r\n  100% { transform: rotate(360deg) }\r\n`;\r\n\r\nconst FieldSpinner = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 43px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 3px solid ${colors.common.primary};\r\n  border-color: ${colors.common.primary} ${colors.common.primary} ${colors.common.primary} transparent;\r\n  border-radius: 50%;\r\n  animation: ${spinning} 1s infinite linear;\r\n`;\r\n\r\n// const FormImage = styled.div`\r\n//   position: absolute;\r\n//   width: 300px;\r\n//   heigth: 50px;\r\n//   top: -200px;\r\n// `;\r\n\r\nfunction RegisterForm(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,30}$/;\r\n  const [emailError, setEmailError] = useState('');\r\n  const [emailChecking, setEmailChecking] = useState(false);\r\n  const [emailDirty, setEmailDirty] = useState(false);\r\n\r\n  const myHandleBlur = async (e, handleBlur) => {\r\n    handleBlur(e);\r\n    setEmailDirty(true);\r\n    const email = e.target.value;\r\n\r\n    try {\r\n      if (email && emailRegex.test(email)) {\r\n        setEmailChecking(true);\r\n\r\n        const res = await fetch(`${serverConfig.baseUrl}/email-check/${email}`);\r\n        const error = await res.text();\r\n\r\n        if (res.status !== 200) {\r\n          setEmailError(error);\r\n        } else {\r\n          setEmailError('');\r\n        }\r\n\r\n        setEmailChecking(false);\r\n      }\r\n    } catch {}\r\n  };\r\n\r\n  const getEmailErrors = (emailCheckEr, emailValidationEr) => {\r\n    if (emailDirty) {\r\n      return emailCheckEr || emailValidationEr;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-register\" style={{}}>\r\n      <Formik\r\n        initialValues={{ email: '', fullname: '', password: '', repeat_password: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.email) {\r\n            errors.email = 'Email is required';\r\n            setEmailError('');\r\n          } else if (!emailRegex.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n            setEmailError('');\r\n          }\r\n\r\n          if (!values.fullname) {\r\n            errors.fullname = 'Fullname is required';\r\n          }\r\n\r\n          if (!values.password) {\r\n            errors.password = 'Password is required';\r\n          } else if (!passwordRegex.test(values.password)) {\r\n            errors.password =\r\n              'Password must contains from 8 to 30 characters and \\nmin 1 uppercase letter\\nmin 1 lowercase letter\\nmin 1 number\\n';\r\n          }\r\n\r\n          if (values.password !== values.repeat_password) {\r\n            errors.repeat_password = 'Passwords are not same';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          props.onSubmit(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting, handleBlur, errors }) => (\r\n          <Form className={`app-form app-form-${theme}`}>\r\n            <FormTitle>\r\n              <span aria-label=\"party-face-emoji\" role=\"img\">\r\n                🥳\r\n              </span>\r\n              Join us!\r\n              <span aria-label=\"party-face-emoji\" role=\"img\">\r\n                🥳\r\n              </span>\r\n            </FormTitle>\r\n\r\n            <ThemedField>\r\n              <label>Your fullname</label>\r\n              <Field autoFocus={true} placeholder=\"David Bowie\" type=\"text\" name=\"fullname\" />\r\n              <ErrorMessage name=\"fullname\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              {emailChecking && <FieldSpinner />}\r\n\r\n              <label>Email (we will send you a confrimation link)</label>\r\n              <Field onBlur={(e) => myHandleBlur(e, handleBlur)} placeholder=\"abc@gmail.com\" type=\"text\" name=\"email\" />\r\n              <span>{getEmailErrors(emailError, errors.email)}</span>\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" placeholder=\"Do not forget it :)\" />\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Repeat password</label>\r\n              <Field type=\"password\" name=\"repeat_password\" placeholder=\"\" />\r\n              <ErrorMessage name=\"repeat_password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <Button type=\"submit\">Sign up!</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport serverConfig from '../../server-config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Register({ history }) {\r\n  const handleSubmit = async (values) => {\r\n    const response = await fetch(serverConfig.baseUrl + '/signup', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        name: values.fullname,\r\n        password: values.password,\r\n        redirectUrl: `${window.location.origin}/#/login`,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      history.push({ pathname: '/confirm', email: values.email });\r\n    } else {\r\n      // history.push(); // TODO: redirect to registration error page\r\n    }\r\n  };\r\n\r\n  return <RegisterForm onSubmit={handleSubmit} />;\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport colors from '../../colors';\r\n\r\nfunction ThemeSwitcherButton(props) {\r\n  const style = {\r\n    background: colors.common.primary,\r\n    boxShadow: 'none',\r\n    border: 'none',\r\n    outline: 'none',\r\n    color: colors.dark.foreground,\r\n    cursor: 'pointer',\r\n    fontSize: '1.2rem',\r\n  };\r\n\r\n  return <button style={style} {...props}></button>;\r\n}\r\n\r\nexport default ThemeSwitcherButton;\r\n","import serverConfig from '../server-config';\r\n\r\nexport const RECIEVE_USER_DATA = 'users/RECIEVE_USER_DATA';\r\nexport const recieveUserData = (data) => {\r\n  return {\r\n    type: RECIEVE_USER_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const CLEAR_USER_DATA = 'users/CLEAR_USER_DATA';\r\nexport const clearUserData = () => {\r\n  return {\r\n    type: CLEAR_USER_DATA,\r\n  };\r\n};\r\n\r\nexport const fetchUserData = (userId) => async (dispatch) => {\r\n  const response = await fetch(`${serverConfig.baseUrl}/users/get/by/id/${userId}`, {\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n  });\r\n  const data = await response.json();\r\n\r\n  dispatch(recieveUserData(data));\r\n};\r\n\r\nexport const uploadPhoto = (userId, data, jwt) => async (dispatch) => {\r\n  await fetch(`${serverConfig.baseUrl}/users/update/image/${userId}`, {\r\n    method: 'put',\r\n    body: data,\r\n    headers: {\r\n      Authorization: `Bearer ${jwt}`,\r\n    },\r\n  });\r\n\r\n  dispatch(fetchUserData(userId));\r\n};\r\n","import serverConfig from '../server-config';\r\nimport { fetchUserData, clearUserData } from './user';\r\n\r\nexport const RECIEVE_TOKENS = 'auth/RECIEVE_TOKENS';\r\nexport const recieveTokens = ({ token, userId }) => {\r\n  localStorage.setItem('signedIn', 'true');\r\n\r\n  return {\r\n    type: RECIEVE_TOKENS,\r\n    payload: { token, userId },\r\n  };\r\n};\r\n\r\nexport const SET_ERROR_TEXT = 'auth/SET_ERROR_TEXT';\r\nexport const setErrorText = (err) => {\r\n  return {\r\n    type: SET_ERROR_TEXT,\r\n    payload: { errorText: err },\r\n  };\r\n};\r\n\r\nexport const CLEAR_AUTH_DATA = 'auth/CLEAR_AUTH_DATA';\r\nexport const clearAuthData = () => {\r\n  return {\r\n    type: CLEAR_AUTH_DATA,\r\n  };\r\n};\r\n\r\nexport const refreshAccessToken = () => async (dispatch) => {\r\n  const signed = localStorage.getItem('signedIn');\r\n\r\n  if (!signed || signed === 'false') {\r\n    return;\r\n  }\r\n\r\n  const response = await fetch(`${serverConfig.baseUrl}/token/refresh`, {\r\n    method: 'get',\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    credentials: 'include',\r\n  });\r\n\r\n  if (response.ok) {\r\n    const json = await response.json();\r\n\r\n    dispatch(recieveTokens(json));\r\n    dispatch(fetchUserData(json.userId));\r\n  } else {\r\n  }\r\n};\r\n\r\nexport const requestLogin = (email, password) => async (dispatch) => {\r\n  const response = await fetch(`${serverConfig.baseUrl}/auth/login`, {\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    credentials: 'include',\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    localStorage.setItem('signed', 'true');\r\n\r\n    const json = await response.json();\r\n    dispatch(recieveTokens(json));\r\n    dispatch(fetchUserData(json.userId));\r\n\r\n    window.location.href = '/#/';\r\n  } else {\r\n    localStorage.setItem('signedIn', 'false');\r\n    dispatch(setErrorText('Incorrect email or password'));\r\n  }\r\n};\r\n\r\nexport const signOut = () => async (dispatch) => {\r\n  await fetch(`${serverConfig.baseUrl}/auth/logout`, { credentials: 'include' });\r\n  localStorage.setItem('signedIn', 'false');\r\n\r\n  dispatch(clearAuthData());\r\n  dispatch(clearUserData());\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun, faMoon, faCog, faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport ThemeSwitcherButton from './ThemeSwitcherButton';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/auth';\r\n\r\nimport colors from '../../colors';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [menuState, setMenuState] = useState('closed');\r\n  const [redirect, setRedirect] = useState('');\r\n  const [userData, setSignedUserData] = useState({ name: '', id: '' });\r\n\r\n  useEffect(() => {\r\n    setSignedUserData({ name: props.name, id: props.id });\r\n  }, [props]);\r\n\r\n  const toggleMenuState = () => {\r\n    menuState === 'open' ? setMenuState('closed') : setMenuState('open');\r\n  };\r\n\r\n  const themeIcon = () => {\r\n    return theme === 'light' ? <FontAwesomeIcon icon={faMoon} /> : <FontAwesomeIcon icon={faSun} />;\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    toggleMenuState();\r\n  };\r\n\r\n  const handleMenuItemClick = (url) => {\r\n    setRedirect(url);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    props.dispatch(signOut());\r\n  };\r\n\r\n  return (\r\n    <header style={{ backgroundColor: colors.common.primary }} className={`app-header app-header-${theme}`}>\r\n      {redirect && <Redirect to={redirect} />}\r\n\r\n      <div className=\"header-left-side\">\r\n        <h1 style={{ cursor: 'pointer' }} onClick={() => handleMenuItemClick('/')}>\r\n          DevParties\r\n        </h1>\r\n      </div>\r\n      <div className=\"header-right-side\">\r\n        <ThemeSwitcherButton onClick={toggleTheme}>{themeIcon()}</ThemeSwitcherButton>\r\n        {props.name && (\r\n          <div onClick={handleMenuClick} className=\"profile-header-settings\">\r\n            <a style={{ color: '#fff' }}>{userData.name}</a>\r\n            <ul\r\n              className={`profile-menu ${menuState}`}\r\n              style={{ boxShadow: `0 5px 10px ${theme === 'dark' ? '#000' : '#ccc'}` }}\r\n            >\r\n              <li className=\"profile-menu-item\">\r\n                <Link\r\n                  style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }}\r\n                  to={`/profile/${userData.id}`}\r\n                >\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li className=\"profile-menu-item\">\r\n                <Link\r\n                  style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }}\r\n                  to={`/settings`}\r\n                >\r\n                  <FontAwesomeIcon icon={faCog} />\r\n                  Settings\r\n                </Link>\r\n              </li>\r\n              <li className=\"profile-menu-item\">\r\n                <Link\r\n                  to=\"/\"\r\n                  style={{ color: colors[theme].foreground, backgroundColor: colors[theme].body }}\r\n                  onClick={handleSignOut}\r\n                >\r\n                  <FontAwesomeIcon icon={faSignOutAlt} />\r\n                  Sign out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  name: state.user.userData.name,\r\n  id: state.user.userData._id,\r\n}))(Header);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction EmailSendedAlert({ location }) {\r\n  const { state } = location;\r\n\r\n  if (!location.email) {\r\n    return <Redirect path=\"home\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ fontSize: '7rem', margin: '40px' }}>\r\n        Thank you for registration!\r\n        <span aria-label=\"party-emoji\" role=\"img\">\r\n          🎉\r\n        </span>\r\n      </h1>\r\n      <h2 style={{ fontSize: '3rem', margin: '40px' }}>\r\n        Confirmation link has been sent to <span style={{ textDecoration: 'underline' }}>{location.email}</span>\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailSendedAlert;\r\n","import React, { useContext } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport { FormTitle } from '../Register/RegisterForm';\r\nimport { ThemeContext } from '../Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './LoginForm.css';\r\n\r\nfunction Login(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\n  return (\r\n    <div className=\"app-login\">\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.email) {\r\n            errors.email = 'Email is required';\r\n          } else if (!emailRegex.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n          }\r\n\r\n          if (!values.password) {\r\n            errors.password = 'Password is required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => props.onSubmit(values)}\r\n      >\r\n        {() => (\r\n          <Form className={`app-form app-form-${theme}`}>\r\n            <FormTitle>\r\n              Login to your account!\r\n              <span aria-label=\"sipped-face-emoji\" role=\"img\">\r\n                🤐\r\n              </span>\r\n            </FormTitle>\r\n\r\n            <ThemedField>\r\n              <label>Your email</label>\r\n              <Field autoFocus={true} placeholder=\"abc@gmail.com\" type=\"text\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            <ThemedField>\r\n              <label>Your password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"span\" />\r\n            </ThemedField>\r\n\r\n            {props.children}\r\n\r\n            <Button type=\"submit\">Login</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { requestLogin } from '../../actions/auth';\r\n\r\nconst FormError = styled.div`\r\n  color: rgb(204, 30, 30);\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nfunction Login(props) {\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [props])\r\n\r\n  const loginError = props.errorText;\r\n\r\n  const handleSubmit = async ({ email, password }) => {\r\n    props.dispatch(requestLogin(email, password));\r\n  };\r\n\r\n  // if (redirect) {\r\n  //   return <Redirect to=\"/\" />\r\n  // }\r\n\r\n  // when user authorized userId will not be empty\r\n  return (\r\n    <>\r\n      <LoginForm onSubmit={handleSubmit}>{loginError && <FormError>{loginError}</FormError>}</LoginForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  auth: state.auth,\r\n  errorText: state.auth.errorText,\r\n  userId: state.auth.userId,\r\n}))(Login);\r\n","import React from 'react';\r\n\r\nfunction Emoji({ children, label }) {\r\n  return (\r\n    <span aria-label={`${label}-emoji`} role=\"img\">\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Emoji;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './ProfileView.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport Button from '../../shared/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport colors from '../../colors';\r\nimport Emoji from '../../shared/Emoji';\r\nimport serverConfig from '../../server-config';\r\n\r\nfunction ProfileView(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { user } = props;\r\n\r\n  const handleInviteClick = () => {};\r\n\r\n  const handleInvitationAction = async (action, teamId) => {\r\n    await fetch(`${serverConfig.baseUrl}/users/invitations/${action}/${teamId}`, {\r\n      headers: {\r\n        Authorization: `Bearer: ${props.token}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAcceptClick = (teamId) => {\r\n    handleInvitationAction('accept', teamId);\r\n  };\r\n\r\n  const handleDenyClick = (teamId) => {\r\n    handleInvitationAction('deny', teamId);\r\n  };\r\n\r\n  const mapTeams = () => {\r\n    return user.teams.map((team) => {\r\n      return (\r\n        <li style={{ borderColor: colors[theme].foreground }} key={team._id} className=\"team-mini\">\r\n          <div style={{ backgroundImage: `url(${serverConfig.baseUrl}/${team.imageSrc})` }} className=\"img-wrap\"></div>\r\n          <Link style={{ color: colors[theme].foreground }} to={`/teams/thread/${team._id}`}>\r\n            {team.name}\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTeams = () => {\r\n    if (user.teams && user.teams.length > 0) {\r\n      return (\r\n        <div>\r\n          <ul className=\"teams-list\">{mapTeams(user.teams)}</ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <h3 style={{ borderColor: colors.common.primary, marginLeft: '15px' }} className=\"h3-no-teams\">\r\n          <Emoji label=\"robot\">🤖</Emoji> You are not on any team yet\r\n        </h3>\r\n      );\r\n    }\r\n  };\r\n\r\n  const mapInvitations = () => {\r\n    return user.invitations.map((inv) => {\r\n      return (\r\n        <li key={inv.teamId}>\r\n          <Link to={`/team/${inv.teamId}`} style={{ color: colors[theme].foreground, textDecoration: 'underline' }}>\r\n            {inv.name}\r\n          </Link>\r\n          <button onClick={() => handleAcceptClick(inv.teamId)} className=\"accept-invitation-btn\">\r\n            Accept\r\n          </button>\r\n          <button onClick={() => handleDenyClick(inv.teamId)} className=\"deny-invitation-btn\">\r\n            Deny\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-profile-view\">\r\n      <div className=\"flex-row\">\r\n        <div className=\"left-section\">\r\n          <div\r\n            style={{ backgroundImage: `url(${serverConfig.baseUrl}/${user.imageSrc})` }}\r\n            className={`profile-img profile-img-${theme}`}\r\n          >\r\n            {!user.imageName && <FontAwesomeIcon icon={faCamera} />}\r\n          </div>\r\n\r\n          <div>\r\n            {props.owner ? (\r\n              <>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  {user.invitations.length > 0 && <h2 className=\"invitations-h2\">Your invitations:</h2>}\r\n                  <ul>{mapInvitations()}</ul>\r\n                  {user.emailConfirmed ? (\r\n                    <Button style={{ marginTop: '25px' }}>\r\n                      <Link to=\"/teams/create\">Create a team</Link>\r\n                    </Button>\r\n                  ) : (\r\n                    <Button style={{ marginTop: '25px' }}>\r\n                      <Link to=\"/re-confirm\">Confirm email</Link>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"guest-section\">\r\n                {user.emailConfirmed && (\r\n                  <Button onClick={handleInviteClick} style={{ marginTop: '20px' }}>\r\n                    Invite to the team\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n          <h1 className=\"profile-name\">{user.name}</h1>\r\n          <h2 className=\"profile-email\">\r\n            <FontAwesomeIcon style={{ marginRight: '20px' }} icon={faEnvelope} />\r\n            {user.email}\r\n            {!user.emailConfirmed && <span style={{ color: 'red', margin: '0 10px' }}>(not confirmed)</span>}\r\n\r\n            <span style={{ marginLeft: '10px', color: theme === 'dark' ? '#171d2d' : '#b2b2b2' }}>#{user.uuid}</span>\r\n          </h2>\r\n\r\n          {props.owner && <div className=\"teams-container\">{renderTeams()}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../../server-config';\r\nimport ProfileView from './ProfileView';\r\n\r\nfunction Profile({ match, userId, token }, props) {\r\n  const [user, setUserData] = useState();\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [match, userId]);\r\n\r\n  const fetchUser = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/get/by/id/${match.params.userId}`, {\r\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n    });\r\n\r\n    const userData = await response.json();\r\n    setUserData(userData);\r\n    setIsOwner(userData._id === userId);\r\n  };\r\n\r\n  return user ? <ProfileView token={token} owner={isOwner} user={user} /> : <p>loading...</p>;\r\n}\r\n\r\nexport default connect((state) => ({\r\n  userId: state.auth.userId,\r\n  confirmed: state.user.userData.isConfirmed,\r\n  token: state.auth.token,\r\n}))(Profile);\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\n\r\nimport './FileInput.css';\r\n\r\nfunction FileInput(props) {\r\n  const [imageToUpload, setImageToUpload] = useState();\r\n  const [save, setShowSave] = useState();\r\n  const [discard, setShowDiscard] = useState();\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [imageTouched, setImagedTouched] = useState(false);\r\n  const fileInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setImageSrc(props.defaultSrc || '');\r\n  }, [props.defaultSrc]);\r\n\r\n  useEffect(() => {\r\n    setShowSave(props.options.indexOf('save') !== -1);\r\n    setShowDiscard(props.options.indexOf('discard') !== -1);\r\n  }, [props]);\r\n\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const blob = new Blob([file]);\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    setImageToUpload(file);\r\n    setImageSrc(url);\r\n    setImagedTouched(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    if (props.onFileAttached) props.onFileAttached(formData);\r\n  };\r\n\r\n  const handleChangePhotoClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleImageSave = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', imageToUpload);\r\n    props.onFileSave(formData);\r\n\r\n    setImagedTouched(false);\r\n  };\r\n\r\n  const handleImageDiscard = () => {\r\n    setImageToUpload({});\r\n    setImageSrc(props.defaultSrc || '');\r\n    setImagedTouched(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={handleChangePhotoClick}\r\n        style={{ backgroundImage: `url(${imageSrc})` }}\r\n        className={`profile-img profile-img-${theme}`}\r\n      >\r\n        <FontAwesomeIcon icon={faCamera} />\r\n        <div className=\"expanded-div\">\r\n          <span>Change photo</span>\r\n          <input\r\n            onChange={handleFileInputChange}\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            className=\"file-input\"\r\n            style={{ display: 'none' }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {imageTouched && (\r\n        <div className=\"photo-actions\">\r\n          {save && (\r\n            <span onClick={handleImageSave} className=\"save\">\r\n              Save\r\n            </span>\r\n          )}\r\n          {discard && (\r\n            <span onClick={handleImageDiscard} className=\"discard\">\r\n              Discard\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileInput;\r\n","import React, { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport Button from '../../shared/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { uploadPhoto } from '../../actions/user';\r\nimport FileInput from '../../shared/FileInput/FileInput';\r\nimport serverConfig from '../../server-config';\r\n\r\nimport './Settings.css';\r\n\r\nfunction Settings(props) {\r\n  const { user } = props;\r\n  const [userImageSrc, setUserImageSrc] = useState('');\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\n  useEffect(() => {\r\n    setUserImageSrc(serverConfig.baseUrl + '/' + user.imageSrc);\r\n  }, [props]);\r\n\r\n  const handleFileSave = (formData) => {\r\n    props.dispatch(uploadPhoto(user._id, formData, props.jwt));\r\n  };\r\n\r\n  return (\r\n    user && (\r\n      <div className=\"app-profile-settings\">\r\n        <Formik\r\n          initialValues={{ email: user.email, password: '' }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n\r\n            if (!values.email) {\r\n              errors.email = 'Email is required';\r\n            } else if (!emailRegex.test(values.email)) {\r\n              errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n              errors.password = 'Password is required';\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n          // onSubmit={(values) => props.onSubmit(values)}\r\n        >\r\n          {() => (\r\n            <Form className=\"app-profile-settings-form \">\r\n              <FileInput defaultSrc={userImageSrc} options={['save', 'discard']} onFileSave={handleFileSave} />\r\n\r\n              <ThemedField>\r\n                <label>Your email</label>\r\n                <Field placeholder=\"abc@gmail.com\" type=\"text\" name=\"email\" />\r\n                <ErrorMessage name=\"email\" component=\"span\" />\r\n              </ThemedField>\r\n              <ThemedField>\r\n                <label>Your password</label>\r\n                <Field type=\"password\" name=\"password\" />\r\n                <ErrorMessage name=\"password\" component=\"span\" />\r\n              </ThemedField>\r\n              {props.children}\r\n              <Button type=\"submit\">Save</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user.userData, jwt: state.auth.token }))(Settings);\r\n","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../../core/Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport colors from '../../colors'\r\n\r\nimport './TopicsInputField.css';\r\n\r\n\r\nfunction TopicsInputField(props) {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [topics, _setTopics] = useState([]);\r\n  const SPACE_CODE = 32;\r\n  const BACKSPACE_CODE = 8;\r\n\r\n  const setTopics = (tpc) => {\r\n    if (tpc.length <= props.max) {\r\n      _setTopics(tpc);\r\n      props.onTopicsChange(tpc);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    let {value} = e.target;\r\n\r\n    if (value.trim()) {\r\n      setTopics([...topics, value])\r\n      e.target.value = ''\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value.trim();\r\n\r\n    if (e.keyCode === SPACE_CODE) {\r\n      value && setTopics([...topics, value]);\r\n      e.target.value = '';\r\n    } else if (!value && e.keyCode === BACKSPACE_CODE) {\r\n      setTopics([...topics.splice(0, topics.length - 1)]);\r\n    }\r\n  };\r\n\r\n  const handleTopicDelete = (topic) => {\r\n    setTopics(topics.filter((t) => t != topic));\r\n  };\r\n\r\n  const mapTopicsToList = () => {\r\n    return topics.map((topic) => {\r\n      return (\r\n        <li style={{background: colors.common.primary}} key={Math.random() * 10} className=\"topic\">\r\n          <span>{topic}</span>\r\n          <FontAwesomeIcon onClick={() => handleTopicDelete(topic)} className=\"icon\" icon={faTimes} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.children}\r\n      <div className={`topics-input topics-input-${theme}`}>\r\n        <div className=\"topics\">\r\n          <ul className=\"topics-list\">{mapTopicsToList()}</ul>\r\n        </div>\r\n        <input onBlur={handleBlur} onKeyDown={handleChange} type=\"text\" className=\"topics-input-field\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopicsInputField;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\r\nimport ThemedField from '../../shared/ThemedField/ThemedField';\r\nimport { FormTitle } from '../Register/RegisterForm';\r\nimport Emoji from '../../shared/Emoji';\r\nimport FileInput from '../../shared/FileInput/FileInput';\r\nimport TopicsInputField from '../../shared/TopicsInputField/TopicsInputField';\r\nimport styled from 'styled-components';\r\nimport Button from '../../shared/Button/Button'\r\n\r\nimport './CreateTeamForm.css';\r\n\r\nconst FieldsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 700px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nfunction CreateTeamForm(props) {\r\n  const [technologies, setTechnologies] = useState([]);\r\n  const imageFormData = useRef()\r\n\r\n  const handleFileAttached = (formData) => {\r\n    imageFormData.current = formData;\r\n  };\r\n\r\n  const handleTechnologiesChange = (techs) => {\r\n    setTechnologies(techs);\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    props.onSubmit({...values, technologies, imageFormData: imageFormData.current})\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-create-team-form\">\r\n      <Formik\r\n        initialValues={{ name: '', description: '', technologies: '' }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.name) {\r\n            errors.name = 'Team name is required';\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => (\r\n          <Form className={`app-form app-create-form`}>\r\n            <FileInput options={['discard']} onFileAttached={handleFileAttached} />\r\n\r\n            <FormTitle style={{ fontSize: '4rem' }}>\r\n              <span>Collaborate with friends</span>\r\n              <Emoji label=\"first-left\">🤜</Emoji>\r\n              <Emoji label=\"first-right\">🤛</Emoji>\r\n            </FormTitle>\r\n\r\n            <FormTitle style={{ fontSize: '2rem', marginBottom: '60px' }}>\r\n              <span>Create your own team!</span>\r\n            </FormTitle>\r\n\r\n            <FieldsContainer>\r\n              <ThemedField>\r\n                <label>Team name *</label>\r\n                <Field placeholder=\"Amazingteam1337\" type=\"text\" name=\"name\" />\r\n                <ErrorMessage name=\"name\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <ThemedField>\r\n                <label>Team summary</label>\r\n                <Field placeholder=\"Our amazing team is gonna do...\" type=\"text\" name=\"description\" />\r\n                <ErrorMessage name=\"description\" component=\"span\" />\r\n              </ThemedField>\r\n\r\n              <TopicsInputField max=\"6\" onTopicsChange={handleTechnologiesChange}>\r\n                <label>Technologes (such as node.js, react etc.) max 6</label>\r\n              </TopicsInputField>\r\n            </FieldsContainer>\r\n\r\n            <Button type=\"submit\">Create team</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTeamForm;\r\n","import React from 'react';\r\nimport CreateTeamForm from './CreateTeamForm';\r\nimport serverConfig from '../../server-config';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction CreateTeam(props) {\r\n  const handleSubmit = async (form) => {\r\n    const creationResponse = await fetch(`${serverConfig.baseUrl}/teams/create`, {\r\n      method: 'post',\r\n      headers: {\r\n        Authorization: `Bearer ${props.jwt}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: form.name,\r\n        description: form.description || '',\r\n        technologies: form.technologies || [],\r\n      }),\r\n    });\r\n\r\n    const { _id } = await creationResponse.json();\r\n\r\n    form.imageFormData && await fetch(`${serverConfig.baseUrl}/teams/upload/image/${_id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.jwt}`,\r\n      },\r\n      method: 'post',\r\n      body: form.imageFormData,\r\n    });\r\n\r\n    window.location.href = \"/#/teams/thread/\" + _id;\r\n  };\r\n\r\n  return <CreateTeamForm onSubmit={handleSubmit} />;\r\n}\r\n\r\nexport default connect((state) => ({ jwt: state.auth.token }))(CreateTeam);\r\n","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ThemeContext } from '../../../Page/Page';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faCog, faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport colors from '../../../../colors';\r\nimport { Link } from 'react-router-dom';\r\nimport serverConfig from '../../../../server-config';\r\n\r\nimport './TeamThread.css';\r\n\r\nconst InfoMessage = styled.div`\r\n  text-alight: center;\r\n  margin: 0 auto;\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  background: rgba(255, 255, 255, 0.03);\r\n`;\r\n\r\nconst YourMessage = styled.div`\r\n  background: #0a0d14;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  padding: 15px 20px;\r\n  margin: 10px 0;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n\r\n    right: -5px;\r\n    bottom: 0;\r\n\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 0 20px 20px 20px;\r\n    border-color: transparent transparent #0a0d14 transparent;\r\n  }\r\n`;\r\n\r\nconst AnothersMessage = styled.div`\r\n  background: ${colors.common.primary};\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  padding: 15px 20px;\r\n  margin: 10px 0;\r\n  position: relative;\r\n  max-width: 80%;\r\n  margin-left: 20px;\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n\r\n    left: -13px;\r\n    top: 0;\r\n\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 20px 20px 0px 20px;\r\n    border-color: ${colors.common.primary} transparent transparent transparent;\r\n  }\r\n`;\r\n\r\nconst Teammate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  & > .teammate-img {\r\n    width: 40px;\r\n    height: 40px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nfunction TeamPage(props) {\r\n  const { teamInfo, user } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const [msgInputValue, setMsgInputValue] = useState('');\r\n  const { socket } = props;\r\n  const messagesList = useRef();\r\n  const [messages, setMessages] = useState(teamInfo.conversation);\r\n\r\n  useEffect(() => {\r\n    messagesList.current.scrollTop = messagesList.current.scrollHeight;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('message recieved', (msg) => {\r\n        const newMessages = messages;\r\n        newMessages.push(msg);\r\n        setMessages([]);\r\n        setMessages(newMessages);\r\n\r\n        if (messagesList.current) {\r\n          messagesList.current.scrollTop = messagesList.current.scrollHeight;\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const getMsgType = (msg) => {\r\n    if (!msg.userId) {\r\n      return 'info';\r\n    } else if (msg.userId === user._id) {\r\n      return 'your';\r\n    } else {\r\n      return 'other';\r\n    }\r\n  };\r\n\r\n  const handleMsgInputChange = (e) => {\r\n    setMsgInputValue(e.target.value);\r\n  };\r\n\r\n  const handleTryP2PCall = (whom) => {\r\n    props.tryCall({ whom, teamId: teamInfo._id });\r\n  };\r\n\r\n  const handleMsgSend = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (msgInputValue.trim()) {\r\n      socket.emit('message send', { message: msgInputValue.trim(), userId: user._id, teamId: teamInfo._id });\r\n      setMsgInputValue('');\r\n    }\r\n  };\r\n\r\n  const displayMessages = () => {\r\n    return messages.map((msg) => {\r\n      const type = getMsgType(msg);\r\n\r\n      if (type === 'info') {\r\n        return (\r\n          <li style={{ alignSelf: 'center' }} key={msg._id}>\r\n            <InfoMessage>{msg.message}</InfoMessage>\r\n          </li>\r\n        );\r\n      } else if (type === 'your') {\r\n        return (\r\n          <li style={{ alignSelf: 'flex-end' }} key={msg._id}>\r\n            <YourMessage>{msg.message}</YourMessage>\r\n          </li>\r\n        );\r\n      } else {\r\n        const userInfo = teamInfo.teammates.find((t) => t._id === msg.userId);\r\n\r\n        return (\r\n          <li style={{ display: 'flex', alignSelf: 'flex-start' }} key={msg._id}>\r\n            <div\r\n              className=\"user-msg-img\"\r\n              style={{ backgroundImage: `url(${serverConfig.baseUrl}/${userInfo.imageSrc})` }}\r\n            ></div>\r\n\r\n            <AnothersMessage>\r\n              <span className=\"user-msg-name\">{userInfo.name}</span>\r\n              <span className=\"user-msg-text\">{msg.message}</span>\r\n            </AnothersMessage>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const displayTeammates = () => {\r\n    return teamInfo.teammates.map((teammate) => {\r\n      return (\r\n        <li style={{ margin: '10px 0' }} key={teammate._id}>\r\n          <Teammate className=\"teammate\">\r\n            <div\r\n              className=\"teammate-img\"\r\n              style={{ backgroundImage: `url(${serverConfig.baseUrl}/${teammate.imageSrc})` }}\r\n            ></div>\r\n            <Link style={{ color: colors[theme].foreground }} to={`/profile/${teammate._id}`}>\r\n              {teammate.name}\r\n            </Link>\r\n            {user._id !== teammate._id && (\r\n              <span onClick={() => handleTryP2PCall(teammate)} className=\"try-call-btn\">\r\n                <FontAwesomeIcon icon={faPhoneAlt} /> Call\r\n              </span>\r\n            )}\r\n          </Teammate>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-page-main-section\">\r\n      <div className={`messages-container messages-container-${theme}`}>\r\n        <ul ref={messagesList} className=\"messages-list\">\r\n          {displayMessages()}\r\n        </ul>\r\n        <div className={`messages-input messages-input-${theme}`}>\r\n          <form onSubmit={handleMsgSend}>\r\n            <input\r\n              autoFocus={true}\r\n              type=\"text\"\r\n              value={msgInputValue}\r\n              placeholder=\"Type your message here...\"\r\n              onChange={handleMsgInputChange}\r\n            />\r\n            <button className=\"send-btn\">\r\n              <FontAwesomeIcon style={{ transform: 'rotate(45deg) translateY(-2px)' }} icon={faPaperPlane} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/*  */}\r\n      <div className=\"team-about-section\">\r\n        <h1 className=\"team-name\">\r\n          {teamInfo.name}\r\n          <Link\r\n            style={{ color: colors[theme].foreground }}\r\n            to={`/teams/thread/${teamInfo._id}/settings`}\r\n            className=\"team-settings-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </Link>\r\n        </h1>\r\n        <ul className=\"teammates\">{displayTeammates()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../../../server-config';\r\nimport TeamThread from './TeamThread/TeamThread';\r\nimport io from 'socket.io-client';\r\n\r\nimport { tryCall } from '../../../actions/p2p';\r\nimport { intializeSocket } from '../../../actions/socket';\r\n\r\nfunction TeamContainer(props) {\r\n  const [userIsTeammate, setUserIsTeammate] = useState(false);\r\n  const [teamInfo, setTeamInfo] = useState(false);\r\n  const [socket, setSocket] = useState(false);\r\n\r\n  const { teamId } = props.match.params;\r\n\r\n  const fetchTeamData = async () => {\r\n    if (teamInfo || !props.auth) return;\r\n\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/by/id/${teamId}`);\r\n    const json = await response.json();\r\n\r\n    setTeamInfo(json);\r\n\r\n    const ids = json.teammates.map((teammate) => teammate.userId);\r\n    const result = ids.some((id) => id === props.user.userData._id);\r\n\r\n    setUserIsTeammate(result);\r\n  };\r\n\r\n  const handleCallTry = (whom) => {\r\n    props.dispatch(tryCall(whom));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.auth.token && teamInfo) {\r\n      const sock = io(serverConfig.baseUrl, {\r\n        query: {\r\n          token: props.auth.token,\r\n          method: 'connect',\r\n          teamId: teamInfo._id,\r\n        },\r\n      });\r\n\r\n      setSocket(sock);\r\n      props.dispatch(intializeSocket(sock));\r\n    }\r\n  }, [props.auth.token, teamInfo]);\r\n\r\n  useEffect(() => {\r\n    fetchTeamData();\r\n  }, [props.user.userData._id, props.auth]);\r\n\r\n  return (\r\n    teamInfo && (\r\n      <TeamThread\r\n        tryCall={(whom) => handleCallTry(whom)}\r\n        user={props.user.userData}\r\n        token={props.auth.token}\r\n        teamInfo={teamInfo}\r\n        socket={socket}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ socket: state.socket, auth: state.auth, user: state.user, p2p: state.p2p }))(\r\n  TeamContainer\r\n);\r\n","export const INITIALIZE_SOCKET = 'socket/INITIALIZE_SOCKET';\r\nexport const intializeSocket = (socket) => {\r\n  return {\r\n    type: INITIALIZE_SOCKET,\r\n    payload: socket,\r\n  };\r\n};\r\n","export const TRY_CALL = 'p2pcall/TRY_CALL';\r\nexport const tryCall = (subscriber) => {\r\n  return {\r\n    type: TRY_CALL,\r\n    payload: subscriber,\r\n  };\r\n};\r\n","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport ThemedField from '../../../shared/ThemedField/ThemedField';\r\nimport colors from '../../../colors';\r\nimport { ThemeContext } from '../../../core/Page/Page';\r\nimport serverConfig from '../../../server-config';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nimport './TeamSettings.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TeamSettings(props) {\r\n  const { team } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const [searchedUsers, setSearchedUsers] = useState([]);\r\n  const userSearchInput = useRef();\r\n\r\n  const handleUserSearch = async (val) => {\r\n    if (val.length < 3) {\r\n      setSearchedUsers([]);\r\n      return;\r\n    }\r\n\r\n    const data = val.split(' ').join('+');\r\n\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/search/${data}`);\r\n    const json = await response.json();\r\n\r\n    const filtered = json.filter((user) => {\r\n      const teammatesIds = team.teammates.map((t) => t._id);\r\n      return !teammatesIds.includes(user._id) && user.emailConfirmed;\r\n    });\r\n\r\n    const users = filtered.map((u) => {\r\n      if (team.invitations.map((inv) => inv.userId).includes(u._id)) {\r\n        return { ...u, invited: true };\r\n      }\r\n\r\n      return { ...u, invited: false };\r\n    });\r\n\r\n    setSearchedUsers(users);\r\n  };\r\n\r\n  const handleUserInvitation = async (action, userId) => {\r\n    userSearchInput.current.value = '';\r\n\r\n    await fetch(`${serverConfig.baseUrl}/teams/${action}/${team._id}/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.token}`,\r\n      },\r\n    });\r\n\r\n    setSearchedUsers([]);\r\n    props.onTeamChanged();\r\n  };\r\n\r\n  const handleUserInviteClick = async (userId) => {\r\n    handleUserInvitation('invite', userId);\r\n  };\r\n\r\n  const handleInvitationWithdrawClick = async (userId) => {\r\n    handleUserInvitation('withdraw', userId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const event = fromEvent(userSearchInput.current, 'input').pipe(\r\n      map((e) => e.target.value),\r\n      debounceTime(500),\r\n      distinctUntilChanged()\r\n    );\r\n    const subscription = event.subscribe((val) => handleUserSearch(val));\r\n    return () => subscription.unsubscribe();\r\n  });\r\n\r\n  const editableTeammates = () => {\r\n    return team.teammates.map((teammate) => {\r\n      return (\r\n        <li key={teammate._id}>\r\n          <EditableTeammate teammate={teammate} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const mapSearchResult = () => {\r\n    return searchedUsers.map((user) => {\r\n      return (\r\n        <li className=\"user-mini\" key={user._id}>\r\n          <div className=\"user-mini-img\" style={{ backgroundImage: `url(${user.imageSrc})` }}></div>\r\n          <Link target=\"_blank\" to={`/profile/${user._id}`}>\r\n            {user.name}\r\n          </Link>\r\n          <span className=\"user-mini-uuid\" style={{ color: theme === 'dark' ? '#43527B' : '#b2b2b2' }}>\r\n            #{user.uuid}\r\n          </span>\r\n\r\n          {user.invited ? (\r\n            <>\r\n              <button\r\n                disabled={true}\r\n                onClick={() => handleUserInviteClick(user._id)}\r\n                className=\"disabled user-invite-btn\"\r\n              >\r\n                Pending\r\n              </button>\r\n\r\n              <button onClick={() => handleInvitationWithdrawClick(user._id)} className=\"user-withdraw-btn\">\r\n                Withdraw\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button onClick={() => handleUserInviteClick(user._id)} className=\"user-invite-btn\">\r\n              Invite\r\n            </button>\r\n          )}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const mapAlreadyInvitedUsers = () => {\r\n    return team.invitations.map((user) => {\r\n      return (\r\n        <li className=\"user-mini\" key={user.userId}>\r\n          <div className=\"user-mini-img\" style={{ backgroundImage: `url(${user.imageSrc})` }}></div>\r\n          <Link style={{ marginRight: '15px' }} target=\"_blank\" to={`/profile/${user._id}`}>\r\n            {user.name}\r\n          </Link>\r\n          <button onClick={() => handleInvitationWithdrawClick(user.userId)} className=\"user-withdraw-btn\">\r\n            Withdraw\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-settings-container\">\r\n      <h1 className=\"team-name-header\">{team.name}</h1>\r\n      <div className=\"teammates-container\">\r\n        <ul className=\"teammates-list\">{editableTeammates()}</ul>\r\n      </div>\r\n\r\n      <div className=\"invite-teammate-container\" style={{ borderColor: colors[theme].foreground }}>\r\n        <h2 className=\"secondary-settings-header\">Already invited users</h2>\r\n        <ul className=\"search-result-list\">{mapAlreadyInvitedUsers()}</ul>\r\n      </div>\r\n\r\n      <div className=\"invite-teammate-container\" style={{ borderColor: colors[theme].foreground }}>\r\n        <h2 className=\"secondary-settings-header\">Invite participants</h2>\r\n        <ThemedField>\r\n          <label>Global users search</label>\r\n          <input ref={userSearchInput} type=\"text\" placeholder=\"type name or uid here...\" />\r\n        </ThemedField>\r\n        <ul className=\"search-result-list\">{mapSearchResult()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EditableTeammate({ teammate }) {\r\n  return <div className=\"editable-teammate\">{teammate.name}</div>;\r\n}\r\n\r\nexport default TeamSettings;\r\n","import React, { useEffect, useState } from 'react';\r\nimport TeamSettings from './TeamSettings';\r\nimport serverConfig from '../../../server-config';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TeamSettingsContainer(props) {\r\n  const { teamId } = props.match.params;\r\n  const [teamInfo, setTeamInfo] = useState(false);\r\n\r\n  const fetchTeamInfo = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/by/id/${teamId}`);\r\n    const json = await response.json();\r\n\r\n    setTeamInfo(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeamInfo();\r\n  }, []);\r\n\r\n  return teamInfo && <TeamSettings onTeamChanged={fetchTeamInfo} token={props.token} team={teamInfo} />;\r\n}\r\n\r\nexport default connect((state) => ({ token: state.auth.token }))(TeamSettingsContainer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport serverConfig from '../../../server-config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport './TeamPublicView.css';\r\n\r\nfunction TeamPubclicView(props) {\r\n  const { teamId } = props.match.params;\r\n  const [team, setTeamInfo] = useState(false);\r\n\r\n  const fetchTeamInfo = async () => {\r\n    const response = await fetch(`${serverConfig.baseUrl}/teams/get/${teamId}/public`);\r\n    const json = await response.json();\r\n\r\n    setTeamInfo(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeamInfo();\r\n  }, []);\r\n\r\n  return team ? (\r\n    <div className=\"team-main-container\">\r\n      <div className=\"team-img\" style={{ backgroundImage: `url(${team.imageSrc})` }}></div>\r\n      <h1 className=\"team-name\">{team.name}</h1>\r\n      <h3 className=\"team-description\">{team.description}</h3>\r\n      <h3 className=\"team-teammates\">\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        <span>{team.teammates}</span>\r\n      </h3>\r\n    </div>\r\n  ) : (\r\n    <p>loading...</p>\r\n  );\r\n}\r\n\r\nexport default TeamPubclicView;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport serverConfig from '../../server-config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faMicrophone,\r\n  faMicrophoneSlash,\r\n  faVideo,\r\n  faPhoneSlash,\r\n  faVideoSlash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Call.css';\r\n\r\nfunction Call(props) {\r\n  const { user, p2p } = props;\r\n  const { socket } = props;\r\n  const localStream = useRef();\r\n  const localVideo = useRef();\r\n  const yourPeer = useRef();\r\n  const anotherPeer = useRef();\r\n  const [subscriber, setSubscriber] = useState(false);\r\n  const [calling, setCalling] = useState();\r\n  const [localAudioEnabled, setLocalAudioEnabled] = useState(true);\r\n  const [localVideoEnabled, setLocalVideoEnabled] = useState(false);\r\n\r\n  const fetchStreamFromMediaDevices = async () => {\r\n    let stream;\r\n\r\n    // if (navigator.mediaDevices) {\r\n    stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n    // } else {\r\n    // stream = navigator.getUserMedia({ video: true, audio: true });\r\n    // }\r\n\r\n    localVideo.current.srcObject = stream;\r\n    localStream.current = stream;\r\n    localStream.current.getVideoTracks()[0].enabled = localVideoEnabled;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on('you have a call', (data) => {\r\n      if (data.to.userId !== user._id) {\r\n        return;\r\n      }\r\n\r\n      const stream = localStream.current;\r\n\r\n      anotherPeer.current = new Peer({\r\n        initiator: false,\r\n        trickle: false,\r\n        stream,\r\n      });\r\n\r\n      console.log('HERERERER');\r\n    });\r\n  }, [socket]);\r\n\r\n  const tryCall = async (subscriber) => {\r\n    fetchStreamFromMediaDevices();\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: localStream.current,\r\n    });\r\n\r\n    yourPeer.current = peer;\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('try call', {\r\n        signalFromCaller: signal,\r\n        from: { name: user.name, imageSrc: user.imageSrc, userId: user._id },\r\n        to: {\r\n          teamId: p2p.subscriber.teamId,\r\n          userId: p2p.subscriber.whom._id,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleVideoSwitch = () => {\r\n    localStream.current.getVideoTracks()[0].enabled = !localStream.current.getVideoTracks()[0].enabled;\r\n    setLocalVideoEnabled(!localVideoEnabled);\r\n  };\r\n\r\n  const handleAudioSwitch = () => {\r\n    localStream.current.getAudioTracks()[0].enabled = !localStream.current.getAudioTracks()[0].enabled;\r\n    setLocalAudioEnabled(!localAudioEnabled);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCalling(props.p2p.tryCall);\r\n    setSubscriber(props.p2p.subscriber);\r\n\r\n    if (props.p2p.tryCall) {\r\n      tryCall(props.p2p.subscriber);\r\n    }\r\n  }, [props.p2p.tryCall]);\r\n\r\n  return (\r\n    <div className={`call-container ${calling && 'show-mini'}`}>\r\n      {props.p2p.tryCall && <span>Calling to {subscriber?.whom.name}</span>}\r\n      <video id=\"localVideo\" ref={localVideo} autoPlay muted />\r\n      <div className=\"call-buttons\">\r\n        <div\r\n          style={{ background: localAudioEnabled ? '#42AF2C' : '#DF3A3A' }}\r\n          onClick={handleAudioSwitch}\r\n          className=\"micro-switch-btn call-btn\"\r\n        >\r\n          <FontAwesomeIcon icon={localAudioEnabled ? faMicrophone : faMicrophoneSlash} />\r\n        </div>\r\n        <div\r\n          style={{ background: localVideoEnabled ? '#42AF2C' : '#DF3A3A' }}\r\n          onClick={handleVideoSwitch}\r\n          className=\"video-switch-btn call-btn\"\r\n        >\r\n          <FontAwesomeIcon icon={localVideoEnabled ? faVideo : faVideoSlash} />\r\n        </div>\r\n        <div style={{ background: '#DF3A3A' }} className=\"end-call-btn call-btn\">\r\n          <FontAwesomeIcon icon={faPhoneSlash} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ p2p: state.p2p, socket: state.socket.socket, user: state.user.userData }))(Call);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport serverConfig from '../server-config';\r\nimport Emoji from '../shared/Emoji';\r\n\r\nfunction ReconfirmEmail({ email, token, userId }) {\r\n  const sendConfirmationEmail = async () => {\r\n    if (!token) return;\r\n    const response = await fetch(`${serverConfig.baseUrl}/users/email/confirm`, {\r\n      method: 'post',\r\n      body: JSON.stringify({ redirectUrl: `${window.location.origin}/#/profile/${userId}` }),\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendConfirmationEmail();\r\n  }, [userId]);\r\n\r\n  return email ? (\r\n    <div\r\n      style={{ height: '90vh', display: 'flex', textAlign: 'center', justifyContent: 'center', alignItems: 'center' }}\r\n    >\r\n      <h1 style={{ fontSize: '4rem', margin: '40px' }}>\r\n        Confirmation email has been sent to <br />\r\n        <Emoji label=\"email\">💌</Emoji>\r\n        <span style={{ color: 'deeppink' }}>{email}</span>\r\n        <Emoji label=\"email\">💌</Emoji>\r\n      </h1>\r\n    </div>\r\n  ) : (\r\n    <p>loading...</p>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  email: state.user.userData.email,\r\n  token: state.auth.token,\r\n  userId: state.user.userData._id,\r\n}))(ReconfirmEmail);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './core/Home';\r\nimport Register from './core/Register/Register';\r\nimport Page from './core/Page/Page';\r\nimport Header from './core/Header/Header';\r\nimport EmailSendedAlert from './core/EmailSendedAlert';\r\nimport Login from './core/Login/Login';\r\nimport Profile from './core/Profile/Profile';\r\nimport Settings from './core/Settings/Settings';\r\nimport CreateTeam from './core/Teams/CreateTeam';\r\nimport TeamContainer from './core/Teams/Team/TeamContainer';\r\nimport TeamSettingsContainer from './core/Teams/TeamSettings/TeamSettingsContainer';\r\nimport TeamPublicView from './core/Teams/TeamPublicView/TeamPublicView';\r\n\r\nimport Call from './core/Call/Call';\r\n\r\nimport { refreshAccessToken } from './actions/auth';\r\nimport ReconfirmEmail from './core/ReconfirmEmail';\r\n\r\nfunction App({ dispatch, signedIn }) {\r\n  useEffect(() => {\r\n    dispatch(refreshAccessToken());\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Page>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/profile/:userId\" component={Profile} />\r\n\r\n          <Route path=\"/confirm/\" signedIn={signedIn} component={EmailSendedAlert} />\r\n          <GuardedRoute path=\"/settings/\" signedIn={signedIn} component={Settings} />\r\n          <GuardedRoute path=\"/teams/create\" signedIn={signedIn} component={CreateTeam} />\r\n          <GuardedRoute path=\"/teams/thread/:teamId\" exact={true} component={TeamContainer} signedIn={signedIn} />\r\n          <GuardedRoute path=\"/teams/thread/:teamId/settings\" component={TeamSettingsContainer} signedIn={signedIn} />\r\n          <GuardedRoute path=\"/re-confirm/\" signedIn={signedIn} component={ReconfirmEmail} />\r\n\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/team/:teamId\" component={TeamPublicView} />\r\n        </Switch>\r\n\r\n        <Call />\r\n      </Page>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst GuardedRoute = ({ component, signedIn, ...rest }) => (\r\n  <Route {...rest} component={component}>\r\n    {signedIn == 'false' && <Redirect to=\"/\" />}\r\n  </Route>\r\n);\r\n\r\nexport default connect((state) => ({ signedIn: state.auth.signedIn }))(App);\r\n","import { handleActions } from 'redux-actions';\r\nimport { RECIEVE_TOKENS, SET_ERROR_TEXT, CLEAR_AUTH_DATA } from '../actions/auth';\r\n\r\nconst authReducer = handleActions(\r\n  {\r\n    [RECIEVE_TOKENS]: (state, action) => ({\r\n      ...state,\r\n      token: action.payload.token,\r\n      userId: action.payload.userId,\r\n      errorText: '',\r\n      signedIn: 'true',\r\n    }),\r\n    [SET_ERROR_TEXT]: (state, action) => ({\r\n      ...state,\r\n      errorText: action.payload.errorText,\r\n    }),\r\n    [CLEAR_AUTH_DATA]: (state, action) => ({\r\n      ...state,\r\n      userId: '',\r\n      token: '',\r\n      signedIn: 'false',\r\n    }),\r\n  },\r\n  { userId: '', token: '', errorText: '', signedIn: localStorage.getItem('signedIn') || 'false' }\r\n);\r\n\r\nexport default authReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { RECIEVE_USER_DATA, CLEAR_USER_DATA } from '../actions/user';\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [RECIEVE_USER_DATA]: (state, action) => ({\r\n      ...state,\r\n      userData: action.payload,\r\n      errorText: '',\r\n    }),\r\n    [CLEAR_USER_DATA]: (state, action) => ({\r\n      ...state,\r\n      userData: '',\r\n    }),\r\n  },\r\n  { userData: '', errorText: '' }\r\n);\r\n\r\nexport default userReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { TRY_CALL } from '../actions/p2p';\r\n\r\nconst p2preducer = handleActions(\r\n  {\r\n    [TRY_CALL]: (state, action) => ({\r\n      ...state,\r\n      tryCall: true,\r\n      subscriber: action.payload,\r\n    }),\r\n  },\r\n  { tryCall: false, subscriber: null }\r\n);\r\n\r\nexport default p2preducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport { INITIALIZE_SOCKET } from '../actions/socket';\r\n\r\nconst socketReducer = handleActions(\r\n  {\r\n    [INITIALIZE_SOCKET]: (state, action) => ({\r\n      ...state,\r\n      socket: action.payload,\r\n    }),\r\n  },\r\n  { socket: null }\r\n);\r\n\r\nexport default socketReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\nimport userReducer from './user';\r\nimport p2preducer from './p2p';\r\nimport socketReducer from './socket';\r\n\r\nexport default combineReducers({ auth: authReducer, user: userReducer, p2p: p2preducer, socket: socketReducer });\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}